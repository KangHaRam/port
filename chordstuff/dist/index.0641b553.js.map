{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-f2ae657f424af3a9.js","src/app.js","node_modules/@tonaljs/chord/dist/index.mjs","node_modules/@tonaljs/chord/index.ts","node_modules/@tonaljs/chord-detect/dist/index.mjs","node_modules/@tonaljs/chord-detect/index.ts","node_modules/@tonaljs/chord-type/dist/index.mjs","node_modules/@tonaljs/chord-type/index.ts","node_modules/@tonaljs/chord-type/data.ts","node_modules/@tonaljs/core/dist/index.mjs","node_modules/@tonaljs/core/src/utils.ts","node_modules/@tonaljs/core/src/named.ts","node_modules/@tonaljs/core/src/pitch.ts","node_modules/@tonaljs/core/src/note.ts","node_modules/@tonaljs/core/src/interval.ts","node_modules/@tonaljs/core/src/distance.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/@tonaljs/pcset/dist/index.mjs","node_modules/@tonaljs/pcset/index.ts","node_modules/@tonaljs/collection/dist/index.mjs","node_modules/@tonaljs/collection/index.ts","node_modules/@tonaljs/scale-type/dist/index.mjs","node_modules/@tonaljs/scale-type/index.ts","node_modules/@tonaljs/scale-type/data.ts","node_modules/tonal/dist/index.mjs","node_modules/tonal/index.ts","node_modules/@tonaljs/abc-notation/dist/index.mjs","node_modules/@tonaljs/abc-notation/index.ts","node_modules/@tonaljs/array/dist/index.mjs","node_modules/@tonaljs/array/index.ts","node_modules/@tonaljs/duration-value/dist/index.mjs","node_modules/@tonaljs/duration-value/data.ts","node_modules/@tonaljs/duration-value/index.ts","node_modules/@tonaljs/interval/dist/index.mjs","node_modules/@tonaljs/interval/index.ts","node_modules/@tonaljs/key/dist/index.mjs","node_modules/@tonaljs/key/index.ts","node_modules/@tonaljs/note/dist/index.mjs","node_modules/@tonaljs/note/index.ts","node_modules/@tonaljs/midi/dist/index.mjs","node_modules/@tonaljs/midi/index.ts","node_modules/@tonaljs/roman-numeral/dist/index.mjs","node_modules/@tonaljs/roman-numeral/index.ts","node_modules/@tonaljs/mode/dist/index.mjs","node_modules/@tonaljs/mode/index.ts","node_modules/@tonaljs/progression/dist/index.mjs","node_modules/@tonaljs/progression/index.ts","node_modules/@tonaljs/range/dist/index.mjs","node_modules/@tonaljs/range/index.ts","node_modules/@tonaljs/scale/dist/index.mjs","node_modules/@tonaljs/scale/index.ts","node_modules/@tonaljs/time-signature/dist/index.mjs","node_modules/@tonaljs/time-signature/index.ts","node_modules/howler/dist/howler.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"fe4256060641b553\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import { getChord } from \"@tonaljs/chord\";\r\nimport { note, interval, Chord, ChordType, transpose } from \"tonal\";\r\nimport { Howler, howl } from 'howler';\r\n\r\nconst sound = new Howl ({\r\n    src: ['assets/pianoSprite.mp3'],\r\n    onload() {\r\n        //console.log('Sound file has been loaded. Do something here!');\r\n        soundEngine.init();\r\n    },\r\n    onloaderror(e, msg) {\r\n        console.log('Error', e, msg);\r\n    }\r\n});\r\n\r\n//console.log(note('c'));\r\n//const myInterval = interval('5P');\r\n//console.log(myInterval);\r\n//console.log(Chord.get('Cmaj7'));\r\n\r\nconst startNotes = ['C', 'C#', 'Db', 'D', 'D#', 'Eb', 'E', 'F', 'F#', 'Gb', 'G', 'G#', 'Ab', 'A', 'A#', 'Bb', 'B'];\r\nconst startNoteSelector = document.querySelector('#start-note');\r\nconst octaveSelector = document.querySelector('#octave');\r\nconst buttons = document.querySelector('.buttons');\r\nconst intervalsInChord = document.querySelector('.intervals-in-chord');\r\nconst notesInChord = document.querySelector('.notes-in-chord');\r\n\r\nlet selectedStartNote = 'C';\r\nlet selectedOctave = '0';\r\nlet selectedChord;\r\n\r\nconst app = {\r\n    init() {\r\n        this.setUpStartNotes();\r\n        this.setUpOctaves();\r\n        this.setUpButtons();\r\n        this.setUpEventListners();\r\n    },\r\n\r\n    setUpStartNotes() {\r\n        startNotes.forEach(noteName => {\r\n            let noteNameOption = this.addElement('option', noteName);\r\n            startNoteSelector.appendChild(noteNameOption);\r\n        });\r\n    }, \r\n    setUpOctaves() {\r\n        for (let i = 0; i <= 7; i++) {\r\n            let octaveNumber = this.addElement('option', i);\r\n            octaveSelector.appendChild(octaveNumber);\r\n        }\r\n    },\r\n    setUpButtons() {\r\n        const chordNames = ChordType.all().map(entry => {\r\n            return entry.aliases[0];\r\n        });\r\n        chordNames.forEach(chordName => {\r\n            let chordButton = this.addElement('button', chordName)\r\n            buttons.appendChild(chordButton);\r\n        });\r\n    },\r\n    setUpEventListners() {\r\n        startNoteSelector.addEventListener('change', () => {\r\n            selectedStartNote = startNoteSelector.value;\r\n            //console.log(selectedStartNote);\r\n        });\r\n        octaveSelector.addEventListener('change', () => {\r\n            selectedOctave = octaveSelector.value;\r\n            //console.log(selectedOctave);\r\n        });\r\n        buttons.addEventListener('click', (event) => {\r\n            if (event.target.classList.contains('buttons')) {\r\n                return;\r\n            }\r\n            selectedChord = event.target.innerText;\r\n            this.displayAndPlayChord(selectedChord);\r\n        });\r\n    },\r\n\r\n    displayAndPlayChord(selectedChord) {\r\n        let chordIntervals = getChord(selectedChord).intervals;\r\n        intervalsInChord.innerText = chordIntervals.join(' - ');\r\n        const startNotewithOctave = selectedStartNote + selectedOctave;\r\n        \r\n        let chordNotes = chordIntervals.map(val => {\r\n            return transpose(startNotewithOctave, val);\r\n        });\r\n\r\n        notesInChord.innerText = chordNotes.join(' - ');\r\n        soundEngine.play(chordNotes);\r\n    },\r\n\r\n    addElement(elementName, content) {\r\n        let element = document.createElement(elementName);\r\n        element.innerHTML = content;\r\n        return element;\r\n    } \r\n}\r\n\r\nconst soundEngine = {\r\n    init() {\r\n        const lengthOfNote = 1000.2;\r\n        let timeIndex = 0;\r\n        for (let i = 12; i <= 120; i++) {\r\n            sound['_sprite'][i] = [timeIndex, lengthOfNote];\r\n            timeIndex += lengthOfNote;\r\n        }\r\n        //sound.play('80');\r\n        //console.log('It works');\r\n        //sound.play();\r\n    },\r\n    play(soundSequence){\r\n        const soundSequenceMidiNumber = soundSequence.map(noteName => {\r\n            return note(noteName).midi;\r\n        });\r\n        soundSequenceMidiNumber.forEach(noteMidiNumber => {\r\n            sound.volume(0.75);\r\n            //console.log(noteMidiNumber);\r\n            sound.play(noteMidiNumber.toString());\r\n        });\r\n        //console.log(soundSequence);\r\n    }\r\n}\r\n\r\napp.init();\r\n\r\n",null,"import { detect } from \"@tonaljs/chord-detect\";\nimport {\n  all as chordTypes,\n  ChordType,\n  get as getChordType,\n} from \"@tonaljs/chord-type\";\nimport { tonicIntervalsTransposer } from \"@tonaljs/core\";\n\nimport {\n  deprecate,\n  distance,\n  note,\n  NoteName,\n  tokenizeNote,\n  transpose as transposeNote,\n} from \"@tonaljs/core\";\n\nimport { isSubsetOf, isSupersetOf } from \"@tonaljs/pcset\";\n\nimport { all as scaleTypes } from \"@tonaljs/scale-type\";\nexport { detect } from \"@tonaljs/chord-detect\";\n\ntype ChordName = string;\ntype ChordNameTokens = [string, string]; // [TONIC, SCALE TYPE]\n\nexport interface Chord extends ChordType {\n  tonic: string | null;\n  type: string;\n  root: string;\n  rootDegree: number;\n  symbol: string;\n  notes: NoteName[];\n}\n\nconst NoChord: Chord = {\n  empty: true,\n  name: \"\",\n  symbol: \"\",\n  root: \"\",\n  rootDegree: 0,\n  type: \"\",\n  tonic: null,\n  setNum: NaN,\n  quality: \"Unknown\",\n  chroma: \"\",\n  normalized: \"\",\n  aliases: [],\n  notes: [],\n  intervals: [],\n};\n\n// 6, 64, 7, 9, 11 and 13 are consider part of the chord\n// (see https://github.com/danigb/tonal/issues/55)\nconst NUM_TYPES = /^(6|64|7|9|11|13)$/;\n/**\n * Tokenize a chord name. It returns an array with the tonic and chord type\n * If not tonic is found, all the name is considered the chord name.\n *\n * This function does NOT check if the chord type exists or not. It only tries\n * to split the tonic and chord type.\n *\n * @function\n * @param {string} name - the chord name\n * @return {Array} an array with [tonic, type]\n * @example\n * tokenize(\"Cmaj7\") // => [ \"C\", \"maj7\" ]\n * tokenize(\"C7\") // => [ \"C\", \"7\" ]\n * tokenize(\"mMaj7\") // => [ null, \"mMaj7\" ]\n * tokenize(\"Cnonsense\") // => [ null, \"nonsense\" ]\n */\nexport function tokenize(name: string): ChordNameTokens {\n  const [letter, acc, oct, type] = tokenizeNote(name);\n  if (letter === \"\") {\n    return [\"\", name];\n  }\n  // aug is augmented (see https://github.com/danigb/tonal/issues/55)\n  if (letter === \"A\" && type === \"ug\") {\n    return [\"\", \"aug\"];\n  }\n  // see: https://github.com/tonaljs/tonal/issues/70\n  if (!type && (oct === \"4\" || oct === \"5\")) {\n    return [letter + acc, oct];\n  }\n\n  if (NUM_TYPES.test(oct)) {\n    return [letter + acc, oct + type];\n  } else {\n    return [letter + acc + oct, type];\n  }\n}\n\n/**\n * Get a Chord from a chord name.\n */\nexport function get(src: ChordName | ChordNameTokens): Chord {\n  if (src === \"\") {\n    return NoChord;\n  }\n  if (Array.isArray(src) && src.length === 2) {\n    return getChord(src[1], src[0]);\n  } else {\n    const [tonic, type] = tokenize(src);\n    const chord = getChord(type, tonic);\n    return chord.empty ? getChord(src) : chord;\n  }\n}\n\n/**\n * Get chord properties\n *\n * @param typeName - the chord type name\n * @param [tonic] - Optional tonic\n * @param [root]  - Optional root (requires a tonic)\n */\nexport function getChord(\n  typeName: string,\n  optionalTonic?: string,\n  optionalRoot?: string\n): Chord {\n  const type = getChordType(typeName);\n  const tonic = note(optionalTonic || \"\");\n  const root = note(optionalRoot || \"\");\n\n  if (\n    type.empty ||\n    (optionalTonic && tonic.empty) ||\n    (optionalRoot && root.empty)\n  ) {\n    return NoChord;\n  }\n\n  const rootInterval = distance(tonic.pc, root.pc);\n  const rootDegree = type.intervals.indexOf(rootInterval) + 1;\n  if (!root.empty && !rootDegree) {\n    return NoChord;\n  }\n\n  const intervals = Array.from(type.intervals);\n\n  for (let i = 1; i < rootDegree; i++) {\n    const num = intervals[0][0];\n    const quality = intervals[0][1];\n    const newNum = parseInt(num, 10) + 7;\n    intervals.push(`${newNum}${quality}`);\n    intervals.shift();\n  }\n\n  const notes = tonic.empty\n    ? []\n    : intervals.map((i) => transposeNote(tonic, i));\n\n  typeName = type.aliases.indexOf(typeName) !== -1 ? typeName : type.aliases[0];\n  const symbol = `${tonic.empty ? \"\" : tonic.pc}${typeName}${\n    root.empty || rootDegree <= 1 ? \"\" : \"/\" + root.pc\n  }`;\n  const name = `${optionalTonic ? tonic.pc + \" \" : \"\"}${type.name}${\n    rootDegree > 1 && optionalRoot ? \" over \" + root.pc : \"\"\n  }`;\n  return {\n    ...type,\n    name,\n    symbol,\n    type: type.name,\n    root: root.name,\n    intervals,\n    rootDegree,\n    tonic: tonic.name,\n    notes,\n  };\n}\n\nexport const chord = deprecate(\"Chord.chord\", \"Chord.get\", get);\n\n/**\n * Transpose a chord name\n *\n * @param {string} chordName - the chord name\n * @return {string} the transposed chord\n *\n * @example\n * transpose('Dm7', 'P4') // => 'Gm7\n */\nexport function transpose(chordName: string, interval: string): string {\n  const [tonic, type] = tokenize(chordName);\n  if (!tonic) {\n    return chordName;\n  }\n  return transposeNote(tonic, interval) + type;\n}\n\n/**\n * Get all scales where the given chord fits\n *\n * @example\n * chordScales('C7b9')\n * // => [\"phrygian dominant\", \"flamenco\", \"spanish heptatonic\", \"half-whole diminished\", \"chromatic\"]\n */\nexport function chordScales(name: string): string[] {\n  const s = get(name);\n  const isChordIncluded = isSupersetOf(s.chroma);\n  return scaleTypes()\n    .filter((scale) => isChordIncluded(scale.chroma))\n    .map((scale) => scale.name);\n}\n/**\n * Get all chords names that are a superset of the given one\n * (has the same notes and at least one more)\n *\n * @function\n * @example\n * extended(\"CMaj7\")\n * // => [ 'Cmaj#4', 'Cmaj7#9#11', 'Cmaj9', 'CM7add13', 'Cmaj13', 'Cmaj9#11', 'CM13#11', 'CM7b9' ]\n */\nexport function extended(chordName: string): string[] {\n  const s = get(chordName);\n  const isSuperset = isSupersetOf(s.chroma);\n  return chordTypes()\n    .filter((chord) => isSuperset(chord.chroma))\n    .map((chord) => s.tonic + chord.aliases[0]);\n}\n\n/**\n * Find all chords names that are a subset of the given one\n * (has less notes but all from the given chord)\n *\n * @example\n */\nexport function reduced(chordName: string): string[] {\n  const s = get(chordName);\n  const isSubset = isSubsetOf(s.chroma);\n  return chordTypes()\n    .filter((chord) => isSubset(chord.chroma))\n    .map((chord) => s.tonic + chord.aliases[0]);\n}\n\n/**\n * Returns a function to get a note name from the scale degree.\n *\n * @example\n * [1, 2, 3, 4].map(Chord.degrees(\"C\")) => [\"C\", \"E\", \"G\", \"C\"]\n * [1, 2, 3, 4].map(Chord.degrees(\"C4\")) => [\"C4\", \"E4\", \"G4\", \"C5\"]\n */\nexport function degrees(chordName: string | ChordNameTokens) {\n  const { intervals, tonic } = get(chordName);\n  const transpose = tonicIntervalsTransposer(intervals, tonic);\n  return (degree: number) =>\n    degree ? transpose(degree > 0 ? degree - 1 : degree) : \"\";\n}\n\n/**\n * Sames as `degree` but with 0-based index\n */\nexport function steps(chordName: string | ChordNameTokens) {\n  const { intervals, tonic } = get(chordName);\n  return tonicIntervalsTransposer(intervals, tonic);\n}\n\nexport default {\n  getChord,\n  get,\n  detect,\n  chordScales,\n  extended,\n  reduced,\n  tokenize,\n  transpose,\n  degrees,\n  steps,\n\n  // deprecate\n  chord,\n};\n",null,"import { all, ChordType } from \"@tonaljs/chord-type\";\nimport { note } from \"@tonaljs/core\";\nimport { modes } from \"@tonaljs/pcset\";\n\ninterface FoundChord {\n  readonly weight: number;\n  readonly name: string;\n}\n\nconst namedSet = (notes: string[]) => {\n  const pcToName = notes.reduce<Record<number, string>>((record, n) => {\n    const chroma = note(n).chroma;\n    if (chroma !== undefined) {\n      record[chroma] = record[chroma] || note(n).name;\n    }\n    return record;\n  }, {});\n\n  return (chroma: number) => pcToName[chroma];\n};\n\ntype DetectOptions = {\n  assumePerfectFifth: boolean\n}\nexport function detect(source: string[], options: Partial<DetectOptions> = {}): string[] {\n  const notes = source.map((n) => note(n).pc).filter((x) => x);\n  if (note.length === 0) {\n    return [];\n  }\n\n  const found: FoundChord[] = findMatches(notes, 1, options);\n\n  return found\n    .filter((chord) => chord.weight)\n    .sort((a, b) => b.weight - a.weight)\n    .map((chord) => chord.name);\n}\n\n/* tslint:disable:no-bitwise */\nconst BITMASK = {\n  // 3m 000100000000\n  // 3M 000010000000\n  anyThirds: 384,\n  // 5P 000000010000\n  perfectFifth: 16,\n  // 5d 000000100000\n  // 5A 000000001000\n  nonPerfectFifths: 40,\n  anySeventh: 3,\n}\n\nconst testChromaNumber = (bitmask: number) => (chromaNumber: number) => Boolean(chromaNumber & bitmask)\nconst hasAnyThird = testChromaNumber(BITMASK.anyThirds)\nconst hasPerfectFifth = testChromaNumber(BITMASK.perfectFifth)\nconst hasAnySeventh = testChromaNumber(BITMASK.anySeventh)\nconst hasNonPerfectFifth = testChromaNumber(BITMASK.nonPerfectFifths)\n\nfunction hasAnyThirdAndPerfectFifthAndAnySeventh(chordType: ChordType) {\n  const chromaNumber = parseInt(chordType.chroma, 2)\n  return hasAnyThird(chromaNumber) && hasPerfectFifth(chromaNumber) && hasAnySeventh(chromaNumber)\n}\n\nfunction withPerfectFifth(chroma: string): string {\n  const chromaNumber = parseInt(chroma, 2)\n  return hasNonPerfectFifth(chromaNumber)\n  ? chroma \n  : (chromaNumber | 16).toString(2)\n}\n\n/* tslint:enable:no-bitwise */\n\ntype FindMatchesOptions = {\n  assumePerfectFifth: boolean\n}\nfunction findMatches(notes: string[], weight: number, options: Partial<FindMatchesOptions>): FoundChord[] {\n  const tonic = notes[0];\n  const tonicChroma = note(tonic).chroma;\n  const noteName = namedSet(notes);\n  // we need to test all chromas to get the correct baseNote\n  const allModes = modes(notes, false);\n\n  const found: FoundChord[] = [];\n  allModes.forEach((mode, index) => {\n    const modeWithPerfectFifth = options.assumePerfectFifth && withPerfectFifth(mode)\n    // some chords could have the same chroma but different interval spelling\n    const chordTypes = all().filter((chordType) => {\n      if(options.assumePerfectFifth && hasAnyThirdAndPerfectFifthAndAnySeventh(chordType)) {\n        return chordType.chroma === modeWithPerfectFifth\n      }\n      return chordType.chroma === mode\n    });\n\n    chordTypes.forEach((chordType) => {\n      const chordName = chordType.aliases[0];\n      const baseNote = noteName(index);\n      const isInversion = index !== tonicChroma;\n      if (isInversion) {\n        found.push({\n          weight: 0.5 * weight,\n          name: `${baseNote}${chordName}/${tonic}`,\n        });\n      } else {\n        found.push({ weight: 1 * weight, name: `${baseNote}${chordName}` });\n      }\n    });\n  });\n\n  return found;\n}\n\nexport default { detect };\n",null,"import { deprecate } from \"@tonaljs/core\";\nimport {\n  EmptyPcset,\n  get as pcset,\n  Pcset,\n  PcsetChroma,\n  PcsetNum,\n} from \"@tonaljs/pcset\";\nimport data from \"./data\";\n\nexport type ChordQuality =\n  | \"Major\"\n  | \"Minor\"\n  | \"Augmented\"\n  | \"Diminished\"\n  | \"Unknown\";\n\nexport interface ChordType extends Pcset {\n  name: string;\n  quality: ChordQuality;\n  aliases: string[];\n}\nconst NoChordType: ChordType = {\n  ...EmptyPcset,\n  name: \"\",\n  quality: \"Unknown\",\n  intervals: [],\n  aliases: [],\n};\n\ntype ChordTypeName = string | PcsetChroma | PcsetNum;\n\nlet dictionary: ChordType[] = [];\nlet index: Record<ChordTypeName, ChordType> = {};\n\n/**\n * Given a chord name or chroma, return the chord properties\n * @param {string} source - chord name or pitch class set chroma\n * @example\n * import { get } from 'tonaljs/chord-type'\n * get('major') // => { name: 'major', ... }\n */\nexport function get(type: ChordTypeName): ChordType {\n  return index[type] || NoChordType;\n}\n\nexport const chordType = deprecate(\"ChordType.chordType\", \"ChordType.get\", get);\n\n/**\n * Get all chord (long) names\n */\nexport function names() {\n  return dictionary.map((chord) => chord.name).filter((x) => x);\n}\n\n/**\n * Get all chord symbols\n */\nexport function symbols() {\n  return dictionary.map((chord) => chord.aliases[0]).filter((x) => x);\n}\n\n/**\n * Keys used to reference chord types\n */\nexport function keys() {\n  return Object.keys(index);\n}\n\n/**\n * Return a list of all chord types\n */\nexport function all(): ChordType[] {\n  return dictionary.slice();\n}\n\nexport const entries = deprecate(\"ChordType.entries\", \"ChordType.all\", all);\n\n/**\n * Clear the dictionary\n */\nexport function removeAll() {\n  dictionary = [];\n  index = {};\n}\n\n/**\n * Add a chord to the dictionary.\n * @param intervals\n * @param aliases\n * @param [fullName]\n */\nexport function add(intervals: string[], aliases: string[], fullName?: string) {\n  const quality = getQuality(intervals);\n  const chord = {\n    ...pcset(intervals),\n    name: fullName || \"\",\n    quality,\n    intervals,\n    aliases,\n  };\n  dictionary.push(chord);\n  if (chord.name) {\n    index[chord.name] = chord;\n  }\n  index[chord.setNum] = chord;\n  index[chord.chroma] = chord;\n  chord.aliases.forEach((alias) => addAlias(chord, alias));\n}\n\nexport function addAlias(chord: ChordType, alias: string) {\n  index[alias] = chord;\n}\n\nfunction getQuality(intervals: string[]): ChordQuality {\n  const has = (interval: string) => intervals.indexOf(interval) !== -1;\n  return has(\"5A\")\n    ? \"Augmented\"\n    : has(\"3M\")\n    ? \"Major\"\n    : has(\"5d\")\n    ? \"Diminished\"\n    : has(\"3m\")\n    ? \"Minor\"\n    : \"Unknown\";\n}\n\ndata.forEach(([ivls, fullName, names]: string[]) =>\n  add(ivls.split(\" \"), names.split(\" \"), fullName)\n);\ndictionary.sort((a, b) => a.setNum - b.setNum);\n\nexport default {\n  names,\n  symbols,\n  get,\n  all,\n  add,\n  removeAll,\n  keys,\n  // deprecated\n  entries,\n  chordType,\n};\n","/**\n * @private\n * Chord List\n * Source: https://en.wikibooks.org/wiki/Music_Theory/Complete_List_of_Chord_Patterns\n * Format: [\"intervals\", \"full name\", \"abrv1 abrv2\"]\n */\nconst CHORDS: string[][] = [\n  // ==Major==\n  [\"1P 3M 5P\", \"major\", \"M ^  maj\"],\n  [\"1P 3M 5P 7M\", \"major seventh\", \"maj7 Δ ma7 M7 Maj7 ^7\"],\n  [\"1P 3M 5P 7M 9M\", \"major ninth\", \"maj9 Δ9 ^9\"],\n  [\"1P 3M 5P 7M 9M 13M\", \"major thirteenth\", \"maj13 Maj13 ^13\"],\n  [\"1P 3M 5P 6M\", \"sixth\", \"6 add6 add13 M6\"],\n  [\"1P 3M 5P 6M 9M\", \"sixth added ninth\", \"6add9 6/9 69 M69\"],\n  [\"1P 3M 6m 7M\", \"major seventh flat sixth\", \"M7b6 ^7b6\"],\n  [\n    \"1P 3M 5P 7M 11A\",\n    \"major seventh sharp eleventh\",\n    \"maj#4 Δ#4 Δ#11 M7#11 ^7#11 maj7#11\",\n  ],\n  // ==Minor==\n  // '''Normal'''\n  [\"1P 3m 5P\", \"minor\", \"m min -\"],\n  [\"1P 3m 5P 7m\", \"minor seventh\", \"m7 min7 mi7 -7\"],\n  [\n    \"1P 3m 5P 7M\",\n    \"minor/major seventh\",\n    \"m/ma7 m/maj7 mM7 mMaj7 m/M7 -Δ7 mΔ -^7\",\n  ],\n  [\"1P 3m 5P 6M\", \"minor sixth\", \"m6 -6\"],\n  [\"1P 3m 5P 7m 9M\", \"minor ninth\", \"m9 -9\"],\n  [\"1P 3m 5P 7M 9M\", \"minor/major ninth\", \"mM9 mMaj9 -^9\"],\n  [\"1P 3m 5P 7m 9M 11P\", \"minor eleventh\", \"m11 -11\"],\n  [\"1P 3m 5P 7m 9M 13M\", \"minor thirteenth\", \"m13 -13\"],\n  // '''Diminished'''\n  [\"1P 3m 5d\", \"diminished\", \"dim ° o\"],\n  [\"1P 3m 5d 7d\", \"diminished seventh\", \"dim7 °7 o7\"],\n  [\"1P 3m 5d 7m\", \"half-diminished\", \"m7b5 ø -7b5 h7 h\"],\n  // ==Dominant/Seventh==\n  // '''Normal'''\n  [\"1P 3M 5P 7m\", \"dominant seventh\", \"7 dom\"],\n  [\"1P 3M 5P 7m 9M\", \"dominant ninth\", \"9\"],\n  [\"1P 3M 5P 7m 9M 13M\", \"dominant thirteenth\", \"13\"],\n  [\"1P 3M 5P 7m 11A\", \"lydian dominant seventh\", \"7#11 7#4\"],\n  // '''Altered'''\n  [\"1P 3M 5P 7m 9m\", \"dominant flat ninth\", \"7b9\"],\n  [\"1P 3M 5P 7m 9A\", \"dominant sharp ninth\", \"7#9\"],\n  [\"1P 3M 7m 9m\", \"altered\", \"alt7\"],\n  // '''Suspended'''\n  [\"1P 4P 5P\", \"suspended fourth\", \"sus4 sus\"],\n  [\"1P 2M 5P\", \"suspended second\", \"sus2\"],\n  [\"1P 4P 5P 7m\", \"suspended fourth seventh\", \"7sus4 7sus\"],\n  [\"1P 5P 7m 9M 11P\", \"eleventh\", \"11\"],\n  [\n    \"1P 4P 5P 7m 9m\",\n    \"suspended fourth flat ninth\",\n    \"b9sus phryg 7b9sus 7b9sus4\",\n  ],\n  // ==Other==\n  [\"1P 5P\", \"fifth\", \"5\"],\n  [\"1P 3M 5A\", \"augmented\", \"aug + +5 ^#5\"],\n  [\"1P 3m 5A\", \"minor augmented\", \"m#5 -#5 m+\"],\n  [\"1P 3M 5A 7M\", \"augmented seventh\", \"maj7#5 maj7+5 +maj7 ^7#5\"],\n  [\n    \"1P 3M 5P 7M 9M 11A\",\n    \"major sharp eleventh (lydian)\",\n    \"maj9#11 Δ9#11 ^9#11\",\n  ],\n  // ==Legacy==\n  [\"1P 2M 4P 5P\", \"\", \"sus24 sus4add9\"],\n  [\"1P 3M 5A 7M 9M\", \"\", \"maj9#5 Maj9#5\"],\n  [\"1P 3M 5A 7m\", \"\", \"7#5 +7 7+ 7aug aug7\"],\n  [\"1P 3M 5A 7m 9A\", \"\", \"7#5#9 7#9#5 7alt\"],\n  [\"1P 3M 5A 7m 9M\", \"\", \"9#5 9+\"],\n  [\"1P 3M 5A 7m 9M 11A\", \"\", \"9#5#11\"],\n  [\"1P 3M 5A 7m 9m\", \"\", \"7#5b9 7b9#5\"],\n  [\"1P 3M 5A 7m 9m 11A\", \"\", \"7#5b9#11\"],\n  [\"1P 3M 5A 9A\", \"\", \"+add#9\"],\n  [\"1P 3M 5A 9M\", \"\", \"M#5add9 +add9\"],\n  [\"1P 3M 5P 6M 11A\", \"\", \"M6#11 M6b5 6#11 6b5\"],\n  [\"1P 3M 5P 6M 7M 9M\", \"\", \"M7add13\"],\n  [\"1P 3M 5P 6M 9M 11A\", \"\", \"69#11\"],\n  [\"1P 3m 5P 6M 9M\", \"\", \"m69 -69\"],\n  [\"1P 3M 5P 6m 7m\", \"\", \"7b6\"],\n  [\"1P 3M 5P 7M 9A 11A\", \"\", \"maj7#9#11\"],\n  [\"1P 3M 5P 7M 9M 11A 13M\", \"\", \"M13#11 maj13#11 M13+4 M13#4\"],\n  [\"1P 3M 5P 7M 9m\", \"\", \"M7b9\"],\n  [\"1P 3M 5P 7m 11A 13m\", \"\", \"7#11b13 7b5b13\"],\n  [\"1P 3M 5P 7m 13M\", \"\", \"7add6 67 7add13\"],\n  [\"1P 3M 5P 7m 9A 11A\", \"\", \"7#9#11 7b5#9 7#9b5\"],\n  [\"1P 3M 5P 7m 9A 11A 13M\", \"\", \"13#9#11\"],\n  [\"1P 3M 5P 7m 9A 11A 13m\", \"\", \"7#9#11b13\"],\n  [\"1P 3M 5P 7m 9A 13M\", \"\", \"13#9\"],\n  [\"1P 3M 5P 7m 9A 13m\", \"\", \"7#9b13\"],\n  [\"1P 3M 5P 7m 9M 11A\", \"\", \"9#11 9+4 9#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13M\", \"\", \"13#11 13+4 13#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13m\", \"\", \"9#11b13 9b5b13\"],\n  [\"1P 3M 5P 7m 9m 11A\", \"\", \"7b9#11 7b5b9 7b9b5\"],\n  [\"1P 3M 5P 7m 9m 11A 13M\", \"\", \"13b9#11\"],\n  [\"1P 3M 5P 7m 9m 11A 13m\", \"\", \"7b9b13#11 7b9#11b13 7b5b9b13\"],\n  [\"1P 3M 5P 7m 9m 13M\", \"\", \"13b9\"],\n  [\"1P 3M 5P 7m 9m 13m\", \"\", \"7b9b13\"],\n  [\"1P 3M 5P 7m 9m 9A\", \"\", \"7b9#9\"],\n  [\"1P 3M 5P 9M\", \"\", \"Madd9 2 add9 add2\"],\n  [\"1P 3M 5P 9m\", \"\", \"Maddb9\"],\n  [\"1P 3M 5d\", \"\", \"Mb5\"],\n  [\"1P 3M 5d 6M 7m 9M\", \"\", \"13b5\"],\n  [\"1P 3M 5d 7M\", \"\", \"M7b5\"],\n  [\"1P 3M 5d 7M 9M\", \"\", \"M9b5\"],\n  [\"1P 3M 5d 7m\", \"\", \"7b5\"],\n  [\"1P 3M 5d 7m 9M\", \"\", \"9b5\"],\n  [\"1P 3M 7m\", \"\", \"7no5\"],\n  [\"1P 3M 7m 13m\", \"\", \"7b13\"],\n  [\"1P 3M 7m 9M\", \"\", \"9no5\"],\n  [\"1P 3M 7m 9M 13M\", \"\", \"13no5\"],\n  [\"1P 3M 7m 9M 13m\", \"\", \"9b13\"],\n  [\"1P 3m 4P 5P\", \"\", \"madd4\"],\n  [\"1P 3m 5P 6m 7M\", \"\", \"mMaj7b6\"],\n  [\"1P 3m 5P 6m 7M 9M\", \"\", \"mMaj9b6\"],\n  [\"1P 3m 5P 7m 11P\", \"\", \"m7add11 m7add4\"],\n  [\"1P 3m 5P 9M\", \"\", \"madd9\"],\n  [\"1P 3m 5d 6M 7M\", \"\", \"o7M7\"],\n  [\"1P 3m 5d 7M\", \"\", \"oM7\"],\n  [\"1P 3m 6m 7M\", \"\", \"mb6M7\"],\n  [\"1P 3m 6m 7m\", \"\", \"m7#5\"],\n  [\"1P 3m 6m 7m 9M\", \"\", \"m9#5\"],\n  [\"1P 3m 5A 7m 9M 11P\", \"\", \"m11A\"],\n  [\"1P 3m 6m 9m\", \"\", \"mb6b9\"],\n  [\"1P 2M 3m 5d 7m\", \"\", \"m9b5\"],\n  [\"1P 4P 5A 7M\", \"\", \"M7#5sus4\"],\n  [\"1P 4P 5A 7M 9M\", \"\", \"M9#5sus4\"],\n  [\"1P 4P 5A 7m\", \"\", \"7#5sus4\"],\n  [\"1P 4P 5P 7M\", \"\", \"M7sus4\"],\n  [\"1P 4P 5P 7M 9M\", \"\", \"M9sus4\"],\n  [\"1P 4P 5P 7m 9M\", \"\", \"9sus4 9sus\"],\n  [\"1P 4P 5P 7m 9M 13M\", \"\", \"13sus4 13sus\"],\n  [\"1P 4P 5P 7m 9m 13m\", \"\", \"7sus4b9b13 7b9b13sus4\"],\n  [\"1P 4P 7m 10m\", \"\", \"4 quartal\"],\n  [\"1P 5P 7m 9m 11P\", \"\", \"11b9\"],\n];\n\nexport default CHORDS;\n",null,"/**\n * Fill a string with a repeated character\n *\n * @param character\n * @param repetition\n */\nexport const fillStr = (s: string, n: number) => Array(Math.abs(n) + 1).join(s);\n\nexport function deprecate<\n  ResultFn extends (this: any, ...newArgs: any[]) => ReturnType<ResultFn>\n>(original: string, alternative: string, fn: ResultFn) {\n  return function (this: unknown, ...args: unknown[]): ReturnType<ResultFn> {\n    // tslint:disable-next-line\n    console.warn(`${original} is deprecated. Use ${alternative}.`);\n    return fn.apply(this, args);\n  };\n}\n","export interface Named {\n  readonly name: string;\n}\n\nexport interface NamedFound {\n  readonly empty: false;\n}\n\nexport interface NotFound extends Named {\n  readonly empty: true;\n  readonly name: \"\";\n}\n\nexport function isNamed(src: any): src is Named {\n  return src !== null && typeof src === \"object\" && typeof src.name === \"string\"\n    ? true\n    : false;\n}\n","import { Named } from \"./named\";\n\ntype Fifths = number;\ntype Octaves = number;\nexport type Direction = 1 | -1;\n\nexport type PitchClassCoordinates = [Fifths];\nexport type NoteCoordinates = [Fifths, Octaves];\nexport type IntervalCoordinates = [Fifths, Octaves, Direction];\nexport type PitchCoordinates =\n  | PitchClassCoordinates\n  | NoteCoordinates\n  | IntervalCoordinates;\n\n/**\n * Pitch properties\n *\n * - {number} step - The step number: 0 = C, 1 = D, ... 6 = B\n * - {number} alt - Number of alterations: -2 = 'bb', -1 = 'b', 0 = '', 1 = '#', ...\n * - {number} [oct] = The octave (undefined when is a coord class)\n * - {number} [dir] = Interval direction (undefined when is not an interval)\n */\nexport interface Pitch {\n  readonly step: number;\n  readonly alt: number;\n  readonly oct?: number; // undefined for pitch classes\n  readonly dir?: Direction; // undefined for notes\n}\n\nexport function isPitch(pitch: any): pitch is Pitch {\n  return pitch !== null &&\n    typeof pitch === \"object\" &&\n    typeof pitch.step === \"number\" &&\n    typeof pitch.alt === \"number\"\n    ? true\n    : false;\n}\n\n// The number of fifths of [C, D, E, F, G, A, B]\nconst FIFTHS = [0, 2, 4, -1, 1, 3, 5];\n// The number of octaves it span each step\nconst STEPS_TO_OCTS = FIFTHS.map((fifths: number) =>\n  Math.floor((fifths * 7) / 12)\n);\n\nexport function encode(pitch: Pitch): PitchCoordinates {\n  const { step, alt, oct, dir = 1 } = pitch;\n  const f = FIFTHS[step] + 7 * alt;\n  if (oct === undefined) {\n    return [dir * f];\n  }\n  const o = oct - STEPS_TO_OCTS[step] - 4 * alt;\n  return [dir * f, dir * o];\n}\n\n// We need to get the steps from fifths\n// Fifths for CDEFGAB are [ 0, 2, 4, -1, 1, 3, 5 ]\n// We add 1 to fifths to avoid negative numbers, so:\n// for [\"F\", \"C\", \"G\", \"D\", \"A\", \"E\", \"B\"] we have:\nconst FIFTHS_TO_STEPS = [3, 0, 4, 1, 5, 2, 6];\n\nexport function decode(coord: PitchCoordinates): Pitch {\n  const [f, o, dir] = coord;\n  const step = FIFTHS_TO_STEPS[unaltered(f)];\n  const alt = Math.floor((f + 1) / 7);\n  if (o === undefined) {\n    return { step, alt, dir };\n  }\n  const oct = o + 4 * alt + STEPS_TO_OCTS[step];\n  return { step, alt, oct, dir };\n}\n\n// Return the number of fifths as if it were unaltered\nfunction unaltered(f: number): number {\n  const i = (f + 1) % 7;\n  return i < 0 ? 7 + i : i;\n}\n","import { isNamed, Named } from \"./named\";\nimport { decode, encode, isPitch, Pitch, PitchCoordinates } from \"./pitch\";\nimport { fillStr } from \"./utils\";\n\nexport type NoteWithOctave = string;\nexport type PcName = string;\nexport type NoteName = NoteWithOctave | PcName;\nexport type NoteLiteral = NoteName | Pitch | Named;\n\nexport interface Note extends Pitch, Named {\n  readonly empty: boolean;\n  readonly name: NoteName;\n  readonly letter: string;\n  readonly acc: string;\n  readonly pc: PcName;\n  readonly chroma: number;\n  readonly height: number;\n  readonly coord: PitchCoordinates;\n  readonly midi: number | null;\n  readonly freq: number | null;\n}\n\nexport interface NoNote extends Partial<Note> {\n  empty: true;\n  name: \"\";\n  pc: \"\";\n  acc: \"\";\n}\nconst NoNote: NoNote = { empty: true, name: \"\", pc: \"\", acc: \"\" };\n\nconst cache: Map<NoteLiteral | undefined, Note | NoNote> = new Map();\n\nexport const stepToLetter = (step: number) => \"CDEFGAB\".charAt(step);\nexport const altToAcc = (alt: number): string =>\n  alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt);\nexport const accToAlt = (acc: string): number =>\n  acc[0] === \"b\" ? -acc.length : acc.length;\n\n/**\n * Given a note literal (a note name or a note object), returns the Note object\n * @example\n * note('Bb4') // => { name: \"Bb4\", midi: 70, chroma: 10, ... }\n */\nexport function note(src: NoteLiteral): Note | NoNote {\n  const stringSrc = JSON.stringify(src);\n\n  const cached = cache.get(stringSrc);\n  if (cached) {\n    return cached;\n  }\n\n  const value =\n    typeof src === \"string\"\n      ? parse(src)\n      : isPitch(src)\n      ? note(pitchName(src))\n      : isNamed(src)\n      ? note(src.name)\n      : NoNote;\n  cache.set(stringSrc, value);\n  return value;\n}\n\ntype NoteTokens = [string, string, string, string];\n\nconst REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\n\n/**\n * @private\n */\nexport function tokenizeNote(str: string): NoteTokens {\n  const m = REGEX.exec(str) as string[];\n  return [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]];\n}\n\n/**\n * @private\n */\nexport function coordToNote(noteCoord: PitchCoordinates): Note {\n  return note(decode(noteCoord)) as Note;\n}\n\nconst mod = (n: number, m: number) => ((n % m) + m) % m;\n\nconst SEMI = [0, 2, 4, 5, 7, 9, 11];\nfunction parse(noteName: NoteName): Note | NoNote {\n  const tokens = tokenizeNote(noteName);\n  if (tokens[0] === \"\" || tokens[3] !== \"\") {\n    return NoNote;\n  }\n\n  const letter = tokens[0];\n  const acc = tokens[1];\n  const octStr = tokens[2];\n\n  const step = (letter.charCodeAt(0) + 3) % 7;\n  const alt = accToAlt(acc);\n  const oct = octStr.length ? +octStr : undefined;\n  const coord = encode({ step, alt, oct });\n\n  const name = letter + acc + octStr;\n  const pc = letter + acc;\n  const chroma = (SEMI[step] + alt + 120) % 12;\n  const height =\n    oct === undefined\n      ? mod(SEMI[step] + alt, 12) - 12 * 99\n      : SEMI[step] + alt + 12 * (oct + 1);\n  const midi = height >= 0 && height <= 127 ? height : null;\n  const freq = oct === undefined ? null : Math.pow(2, (height - 69) / 12) * 440;\n\n  return {\n    empty: false,\n    acc,\n    alt,\n    chroma,\n    coord,\n    freq,\n    height,\n    letter,\n    midi,\n    name,\n    oct,\n    pc,\n    step,\n  };\n}\n\nfunction pitchName(props: Pitch): NoteName {\n  const { step, alt, oct } = props;\n  const letter = stepToLetter(step);\n  if (!letter) {\n    return \"\";\n  }\n\n  const pc = letter + altToAcc(alt);\n  return oct || oct === 0 ? pc + oct : pc;\n}\n","import { isNamed, Named } from \"./named\";\nimport {\n  decode,\n  Direction,\n  encode,\n  IntervalCoordinates,\n  isPitch,\n  Pitch,\n  PitchCoordinates,\n} from \"./pitch\";\nimport { fillStr } from \"./utils\";\n\nexport type IntervalName = string;\nexport type IntervalLiteral = IntervalName | Pitch | Named;\n\ntype Quality =\n  | \"dddd\"\n  | \"ddd\"\n  | \"dd\"\n  | \"d\"\n  | \"m\"\n  | \"M\"\n  | \"P\"\n  | \"A\"\n  | \"AA\"\n  | \"AAA\"\n  | \"AAAA\";\ntype Type = \"perfectable\" | \"majorable\";\n\nexport interface Interval extends Pitch, Named {\n  readonly empty: boolean;\n  readonly name: IntervalName;\n  readonly num: number;\n  readonly q: Quality;\n  readonly type: Type;\n  readonly step: number;\n  readonly alt: number;\n  readonly dir: Direction;\n  readonly simple: number;\n  readonly semitones: number;\n  readonly chroma: number;\n  readonly coord: IntervalCoordinates;\n  readonly oct: number;\n}\n\nexport interface NoInterval extends Partial<Interval> {\n  readonly empty: true;\n  readonly name: \"\";\n  readonly acc: \"\";\n}\n\nconst NoInterval: NoInterval = { empty: true, name: \"\", acc: \"\" };\n\n// shorthand tonal notation (with quality after number)\nconst INTERVAL_TONAL_REGEX = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\n// standard shorthand notation (with quality before number)\nconst INTERVAL_SHORTHAND_REGEX = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\nconst REGEX = new RegExp(\n  \"^\" + INTERVAL_TONAL_REGEX + \"|\" + INTERVAL_SHORTHAND_REGEX + \"$\"\n);\n\ntype IntervalTokens = [string, string];\n\n/**\n * @private\n */\nexport function tokenizeInterval(str?: IntervalName): IntervalTokens {\n  const m = REGEX.exec(`${str}`);\n  if (m === null) {\n    return [\"\", \"\"];\n  }\n  return m[1] ? [m[1], m[2]] : [m[4], m[3]];\n}\n\nconst cache: { [key in string]: Interval | NoInterval } = {};\n\n/**\n * Get interval properties. It returns an object with:\n *\n * - name: the interval name\n * - num: the interval number\n * - type: 'perfectable' or 'majorable'\n * - q: the interval quality (d, m, M, A)\n * - dir: interval direction (1 ascending, -1 descending)\n * - simple: the simplified number\n * - semitones: the size in semitones\n * - chroma: the interval chroma\n *\n * @param {string} interval - the interval name\n * @return {Object} the interval properties\n *\n * @example\n * import { interval } from '@tonaljs/core'\n * interval('P5').semitones // => 7\n * interval('m3').type // => 'majorable'\n */\nexport function interval(src: IntervalLiteral): Interval | NoInterval {\n  return typeof src === \"string\"\n    ? cache[src] || (cache[src] = parse(src))\n    : isPitch(src)\n    ? interval(pitchName(src))\n    : isNamed(src)\n    ? interval(src.name)\n    : NoInterval;\n}\n\nconst SIZES = [0, 2, 4, 5, 7, 9, 11];\nconst TYPES = \"PMMPPMM\";\nfunction parse(str?: string): Interval | NoInterval {\n  const tokens = tokenizeInterval(str);\n  if (tokens[0] === \"\") {\n    return NoInterval;\n  }\n  const num = +tokens[0];\n  const q = tokens[1] as Quality;\n  const step = (Math.abs(num) - 1) % 7;\n  const t = TYPES[step];\n  if (t === \"M\" && q === \"P\") {\n    return NoInterval;\n  }\n  const type = t === \"M\" ? \"majorable\" : \"perfectable\";\n\n  const name = \"\" + num + q;\n  const dir = num < 0 ? -1 : 1;\n  const simple = num === 8 || num === -8 ? num : dir * (step + 1);\n  const alt = qToAlt(type, q);\n  const oct = Math.floor((Math.abs(num) - 1) / 7);\n  const semitones = dir * (SIZES[step] + alt + 12 * oct);\n  const chroma = (((dir * (SIZES[step] + alt)) % 12) + 12) % 12;\n  const coord = encode({ step, alt, oct, dir }) as IntervalCoordinates;\n  return {\n    empty: false,\n    name,\n    num,\n    q,\n    step,\n    alt,\n    dir,\n    type,\n    simple,\n    semitones,\n    chroma,\n    coord,\n    oct,\n  };\n}\n\n/**\n * @private\n *\n * forceDescending is used in the case of unison (#243)\n */\nexport function coordToInterval(\n  coord: PitchCoordinates,\n  forceDescending?: boolean\n): Interval {\n  const [f, o = 0] = coord;\n  const isDescending = f * 7 + o * 12 < 0;\n  const ivl: IntervalCoordinates =\n    forceDescending || isDescending ? [-f, -o, -1] : [f, o, 1];\n  return interval(decode(ivl)) as Interval;\n}\n\nfunction qToAlt(type: Type, q: string): number {\n  return (q === \"M\" && type === \"majorable\") ||\n    (q === \"P\" && type === \"perfectable\")\n    ? 0\n    : q === \"m\" && type === \"majorable\"\n    ? -1\n    : /^A+$/.test(q)\n    ? q.length\n    : /^d+$/.test(q)\n    ? -1 * (type === \"perfectable\" ? q.length : q.length + 1)\n    : 0;\n}\n\n// return the interval name of a pitch\nfunction pitchName(props: Pitch): string {\n  const { step, alt, oct = 0, dir } = props;\n  if (!dir) {\n    return \"\";\n  }\n  const calcNum = step + 1 + 7 * oct;\n  // this is an edge case: descending pitch class unison (see #243)\n  const num = calcNum === 0 ? step + 1 : calcNum;\n  const d = dir < 0 ? \"-\" : \"\";\n  const type = TYPES[step] === \"M\" ? \"majorable\" : \"perfectable\";\n  const name = d + num + altToQ(type, alt);\n  return name;\n}\n\nfunction altToQ(type: Type, alt: number): Quality {\n  if (alt === 0) {\n    return type === \"majorable\" ? \"M\" : \"P\";\n  } else if (alt === -1 && type === \"majorable\") {\n    return \"m\";\n  } else if (alt > 0) {\n    return fillStr(\"A\", alt) as Quality;\n  } else {\n    return fillStr(\"d\", type === \"perfectable\" ? alt : alt + 1) as Quality;\n  }\n}\n","import {\n  coordToInterval,\n  interval as asInterval,\n  IntervalLiteral,\n  IntervalName,\n} from \"./interval\";\nimport { coordToNote, note as asNote, NoteLiteral, NoteName } from \"./note\";\nimport { PitchCoordinates } from \"./pitch\";\n\n/**\n * Transpose a note by an interval.\n *\n * @param {string} note - the note or note name\n * @param {string} interval - the interval or interval name\n * @return {string} the transposed note name or empty string if not valid notes\n * @example\n * import { tranpose } from \"@tonaljs/core\"\n * transpose(\"d3\", \"3M\") // => \"F#3\"\n * transpose(\"D\", \"3M\") // => \"F#\"\n * [\"C\", \"D\", \"E\", \"F\", \"G\"].map(pc => transpose(pc, \"M3)) // => [\"E\", \"F#\", \"G#\", \"A\", \"B\"]\n */\nexport function transpose(\n  noteName: NoteLiteral,\n  intervalName: IntervalLiteral | [number, number]\n): NoteName {\n  const note = asNote(noteName);\n  const intervalCoord = Array.isArray(intervalName)\n    ? intervalName\n    : asInterval(intervalName).coord;\n  if (note.empty || !intervalCoord || intervalCoord.length < 2) {\n    return \"\";\n  }\n  const noteCoord = note.coord;\n  const tr: PitchCoordinates =\n    noteCoord.length === 1\n      ? [noteCoord[0] + intervalCoord[0]]\n      : [noteCoord[0] + intervalCoord[0], noteCoord[1] + intervalCoord[1]];\n  return coordToNote(tr).name;\n}\n\n// Private\nexport function tonicIntervalsTransposer(\n  intervals: string[],\n  tonic: string | undefined | null\n) {\n  const len = intervals.length;\n  return (normalized: number) => {\n    if (!tonic) return \"\";\n    const index =\n      normalized < 0 ? (len - (-normalized % len)) % len : normalized % len;\n    const octaves = Math.floor(normalized / len);\n    const root = transpose(tonic, [0, octaves]);\n    return transpose(root, intervals[index]);\n  };\n}\n\n/**\n * Find the interval distance between two notes or coord classes.\n *\n * To find distance between coord classes, both notes must be coord classes and\n * the interval is always ascending\n *\n * @param {Note|string} from - the note or note name to calculate distance from\n * @param {Note|string} to - the note or note name to calculate distance to\n * @return {string} the interval name or empty string if not valid notes\n *\n */\nexport function distance(\n  fromNote: NoteLiteral,\n  toNote: NoteLiteral\n): IntervalName {\n  const from = asNote(fromNote);\n  const to = asNote(toNote);\n  if (from.empty || to.empty) {\n    return \"\";\n  }\n\n  const fcoord = from.coord;\n  const tcoord = to.coord;\n  const fifths = tcoord[0] - fcoord[0];\n  const octs =\n    fcoord.length === 2 && tcoord.length === 2\n      ? tcoord[1] - fcoord[1]\n      : -Math.floor((fifths * 7) / 12);\n\n  // If it's unison and not pitch class, it can be descending interval (#243)\n  const forceDescending =\n    to.height === from.height &&\n    to.midi !== null &&\n    from.midi !== null &&\n    from.step > to.step;\n  return coordToInterval([fifths, octs], forceDescending).name;\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n",null,"import { compact, range, rotate } from \"@tonaljs/collection\";\nimport {\n  deprecate,\n  Interval,\n  interval,\n  IntervalName,\n  Named,\n  note,\n  Note,\n  NoteName,\n  NotFound,\n} from \"@tonaljs/core\";\n\n/**\n * The properties of a pitch class set\n * @param {number} num - a number between 1 and 4095 (both included) that\n * uniquely identifies the set. It's the decimal number of the chrom.\n * @param {string} chroma - a string representation of the set: a 12-char string\n * with either \"1\" or \"0\" as characters, representing a pitch class or not\n * for the given position in the octave. For example, a \"1\" at index 0 means 'C',\n * a \"1\" at index 2 means 'D', and so on...\n * @param {string} normalized - the chroma but shifted to the first 1\n * @param {number} length - the number of notes of the pitch class set\n * @param {IntervalName[]} intervals - the intervals of the pitch class set\n * *starting from C*\n */\nexport interface Pcset extends Named {\n  readonly empty: boolean;\n  readonly setNum: number;\n  readonly chroma: PcsetChroma;\n  readonly normalized: PcsetChroma;\n  readonly intervals: IntervalName[];\n}\n\nexport const EmptyPcset: Pcset = {\n  empty: true,\n  name: \"\",\n  setNum: 0,\n  chroma: \"000000000000\",\n  normalized: \"000000000000\",\n  intervals: [],\n};\n\nexport type PcsetChroma = string;\nexport type PcsetNum = number;\n\n// UTILITIES\nconst setNumToChroma = (num: number): string => Number(num).toString(2);\nconst chromaToNumber = (chroma: string): number => parseInt(chroma, 2);\nconst REGEX = /^[01]{12}$/;\nexport function isChroma(set: any): set is PcsetChroma {\n  return REGEX.test(set);\n}\nconst isPcsetNum = (set: any): set is PcsetNum =>\n  typeof set === \"number\" && set >= 0 && set <= 4095;\nconst isPcset = (set: any): set is Pcset => set && isChroma(set.chroma);\n\nconst cache: { [key in string]: Pcset } = { [EmptyPcset.chroma]: EmptyPcset };\n\n/**\n * A definition of a pitch class set. It could be:\n * - The pitch class set chroma (a 12-length string with only 1s or 0s)\n * - The pitch class set number (an integer between 1 and 4095)\n * - An array of note names\n * - An array of interval names\n */\nexport type Set =\n  | Partial<Pcset>\n  | PcsetChroma\n  | PcsetNum\n  | NoteName[]\n  | IntervalName[];\n\n/**\n * Get the pitch class set of a collection of notes or set number or chroma\n */\nexport function get(src: Set): Pcset {\n  const chroma: PcsetChroma = isChroma(src)\n    ? src\n    : isPcsetNum(src)\n    ? setNumToChroma(src)\n    : Array.isArray(src)\n    ? listToChroma(src)\n    : isPcset(src)\n    ? src.chroma\n    : EmptyPcset.chroma;\n\n  return (cache[chroma] = cache[chroma] || chromaToPcset(chroma));\n}\n\n/**\n * Use Pcset.properties\n * @function\n * @deprecated\n */\nexport const pcset = deprecate(\"Pcset.pcset\", \"Pcset.get\", get);\n\n/**\n * Get pitch class set chroma\n * @function\n * @example\n * Pcset.chroma([\"c\", \"d\", \"e\"]); //=> \"101010000000\"\n */\nexport const chroma = (set: Set) => get(set).chroma;\n\n/**\n * Get intervals (from C) of a set\n * @function\n * @example\n * Pcset.intervals([\"c\", \"d\", \"e\"]); //=>\n */\nconst intervals = (set: Set) => get(set).intervals;\n\n/**\n * Get pitch class set number\n * @function\n * @example\n * Pcset.num([\"c\", \"d\", \"e\"]); //=> 2192\n */\nconst num = (set: Set) => get(set).setNum;\n\nconst IVLS = [\n  \"1P\",\n  \"2m\",\n  \"2M\",\n  \"3m\",\n  \"3M\",\n  \"4P\",\n  \"5d\",\n  \"5P\",\n  \"6m\",\n  \"6M\",\n  \"7m\",\n  \"7M\",\n];\n\n/**\n * @private\n * Get the intervals of a pcset *starting from C*\n * @param {Set} set - the pitch class set\n * @return {IntervalName[]} an array of interval names or an empty array\n * if not a valid pitch class set\n */\nexport function chromaToIntervals(chroma: PcsetChroma): IntervalName[] {\n  const intervals = [];\n  for (let i = 0; i < 12; i++) {\n    // tslint:disable-next-line:curly\n    if (chroma.charAt(i) === \"1\") intervals.push(IVLS[i]);\n  }\n  return intervals;\n}\n\n/**\n * Get a list of all possible pitch class sets (all possible chromas) *having\n * C as root*. There are 2048 different chromas. If you want them with another\n * note you have to transpose it\n *\n * @see http://allthescales.org/\n * @return {Array<PcsetChroma>} an array of possible chromas from '10000000000' to '11111111111'\n */\nexport function chromas(): PcsetChroma[] {\n  return range(2048, 4095).map(setNumToChroma);\n}\n\n/**\n * Given a a list of notes or a pcset chroma, produce the rotations\n * of the chroma discarding the ones that starts with \"0\"\n *\n * This is used, for example, to get all the modes of a scale.\n *\n * @param {Array|string} set - the list of notes or pitchChr of the set\n * @param {boolean} normalize - (Optional, true by default) remove all\n * the rotations that starts with \"0\"\n * @return {Array<string>} an array with all the modes of the chroma\n *\n * @example\n * Pcset.modes([\"C\", \"D\", \"E\"]).map(Pcset.intervals)\n */\nexport function modes(set: Set, normalize = true): PcsetChroma[] {\n  const pcs = get(set);\n\n  const binary = pcs.chroma.split(\"\");\n  return compact(\n    binary.map((_, i) => {\n      const r = rotate(i, binary);\n      return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    })\n  );\n}\n\n/**\n * Test if two pitch class sets are numentical\n *\n * @param {Array|string} set1 - one of the pitch class sets\n * @param {Array|string} set2 - the other pitch class set\n * @return {boolean} true if they are equal\n * @example\n * Pcset.isEqual([\"c2\", \"d3\"], [\"c5\", \"d2\"]) // => true\n */\nexport function isEqual(s1: Set, s2: Set) {\n  return get(s1).setNum === get(s2).setNum;\n}\n\n/**\n * Create a function that test if a collection of notes is a\n * subset of a given set\n *\n * The function is curryfied.\n *\n * @param {PcsetChroma|NoteName[]} set - the superset to test against (chroma or\n * list of notes)\n * @return{function(PcsetChroma|NoteNames[]): boolean} a function accepting a set\n * to test against (chroma or list of notes)\n * @example\n * const inCMajor = Pcset.isSubsetOf([\"C\", \"E\", \"G\"])\n * inCMajor([\"e6\", \"c4\"]) // => true\n * inCMajor([\"e6\", \"c4\", \"d3\"]) // => false\n */\nexport function isSubsetOf(set: Set) {\n  const s = get(set).setNum;\n\n  return (notes: Set | Pcset) => {\n    const o = get(notes).setNum;\n    // tslint:disable-next-line: no-bitwise\n    return s && s !== o && (o & s) === o;\n  };\n}\n\n/**\n * Create a function that test if a collection of notes is a\n * superset of a given set (it contains all notes and at least one more)\n *\n * @param {Set} set - an array of notes or a chroma set string to test against\n * @return {(subset: Set): boolean} a function that given a set\n * returns true if is a subset of the first one\n * @example\n * const extendsCMajor = Pcset.isSupersetOf([\"C\", \"E\", \"G\"])\n * extendsCMajor([\"e6\", \"a\", \"c4\", \"g2\"]) // => true\n * extendsCMajor([\"c6\", \"e4\", \"g3\"]) // => false\n */\nexport function isSupersetOf(set: Set) {\n  const s = get(set).setNum;\n  return (notes: Set) => {\n    const o = get(notes).setNum;\n    // tslint:disable-next-line: no-bitwise\n    return s && s !== o && (o | s) === o;\n  };\n}\n\n/**\n * Test if a given pitch class set includes a note\n *\n * @param {Array<string>} set - the base set to test against\n * @param {string} note - the note to test\n * @return {boolean} true if the note is included in the pcset\n *\n * Can be partially applied\n *\n * @example\n * const isNoteInCMajor = isNoteIncludedIn(['C', 'E', 'G'])\n * isNoteInCMajor('C4') // => true\n * isNoteInCMajor('C#4') // => false\n */\nexport function isNoteIncludedIn(set: Set) {\n  const s = get(set);\n\n  return (noteName: NoteName): boolean => {\n    const n = note(noteName);\n    return s && !n.empty && s.chroma.charAt(n.chroma) === \"1\";\n  };\n}\n\n/** @deprecated use: isNoteIncludedIn */\nexport const includes = isNoteIncludedIn;\n\n/**\n * Filter a list with a pitch class set\n *\n * @param {Array|string} set - the pitch class set notes\n * @param {Array|string} notes - the note list to be filtered\n * @return {Array} the filtered notes\n *\n * @example\n * Pcset.filter([\"C\", \"D\", \"E\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"d2\", \"c3\", \"d3\" ])\n * Pcset.filter([\"C2\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"c3\" ])\n */\nexport function filter(set: Set) {\n  const isIncluded = isNoteIncludedIn(set);\n  return (notes: NoteName[]) => {\n    return notes.filter(isIncluded);\n  };\n}\n\nexport default {\n  get,\n  chroma,\n  num,\n  intervals,\n  chromas,\n  isSupersetOf,\n  isSubsetOf,\n  isNoteIncludedIn,\n  isEqual,\n  filter,\n  modes,\n  // deprecated\n  pcset,\n};\n\n//// PRIVATE ////\n\nfunction chromaRotations(chroma: string): string[] {\n  const binary = chroma.split(\"\");\n  return binary.map((_, i) => rotate(i, binary).join(\"\"));\n}\n\nfunction chromaToPcset(chroma: PcsetChroma): Pcset {\n  const setNum = chromaToNumber(chroma);\n  const normalizedNum = chromaRotations(chroma)\n    .map(chromaToNumber)\n    .filter((n) => n >= 2048)\n    .sort()[0];\n  const normalized = setNumToChroma(normalizedNum);\n\n  const intervals = chromaToIntervals(chroma);\n\n  return {\n    empty: false,\n    name: \"\",\n    setNum,\n    chroma,\n    normalized,\n    intervals,\n  };\n}\n\nfunction listToChroma(set: any[]): PcsetChroma {\n  if (set.length === 0) {\n    return EmptyPcset.chroma;\n  }\n\n  let pitch: Note | Interval | NotFound;\n  const binary = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  // tslint:disable-next-line:prefer-for-of\n  for (let i = 0; i < set.length; i++) {\n    pitch = note(set[i]);\n    // tslint:disable-next-line: curly\n    if (pitch.empty) pitch = interval(set[i]);\n    // tslint:disable-next-line: curly\n    if (!pitch.empty) binary[pitch.chroma] = 1;\n  }\n  return binary.join(\"\");\n}\n",null,"// ascending range\nfunction ascR(b: number, n: number) {\n  const a = [];\n  // tslint:disable-next-line:curly\n  for (; n--; a[n] = n + b);\n  return a;\n}\n// descending range\nfunction descR(b: number, n: number) {\n  const a = [];\n  // tslint:disable-next-line:curly\n  for (; n--; a[n] = b - n);\n  return a;\n}\n\n/**\n * Creates a numeric range\n *\n * @param {number} from\n * @param {number} to\n * @return {Array<number>}\n *\n * @example\n * range(-2, 2) // => [-2, -1, 0, 1, 2]\n * range(2, -2) // => [2, 1, 0, -1, -2]\n */\nexport function range(from: number, to: number): number[] {\n  return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\n}\n\n/**\n * Rotates a list a number of times. It\"s completly agnostic about the\n * contents of the list.\n *\n * @param {Integer} times - the number of rotations\n * @param {Array} collection\n * @return {Array} the rotated collection\n *\n * @example\n * rotate(1, [1, 2, 3]) // => [2, 3, 1]\n */\nexport function rotate<T>(times: number, arr: T[]): T[] {\n  const len = arr.length;\n  const n = ((times % len) + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\n\n/**\n * Return a copy of the collection with the null values removed\n * @function\n * @param {Array} collection\n * @return {Array}\n *\n * @example\n * compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\n */\nexport function compact(arr: any[]): any[] {\n  return arr.filter((n) => n === 0 || n);\n}\n\n/**\n * Randomizes the order of the specified collection in-place, using the Fisher–Yates shuffle.\n *\n * @function\n * @param {Array} collection\n * @return {Array} the collection shuffled\n *\n * @example\n * shuffle([\"C\", \"D\", \"E\", \"F\"]) // => [...]\n */\nexport function shuffle(arr: any[], rnd = Math.random): any[] {\n  let i: number;\n  let t: any;\n  let m: number = arr.length;\n  while (m) {\n    i = Math.floor(rnd() * m--);\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n}\n\n/**\n * Get all permutations of an collection\n *\n * @param {Array} collection - the collection\n * @return {Array<Array>} an collection with all the permutations\n * @example\n * permutations([\"a\", \"b\", \"c\"])) // =>\n * [\n *   [\"a\", \"b\", \"c\"],\n *   [\"b\", \"a\", \"c\"],\n *   [\"b\", \"c\", \"a\"],\n *   [\"a\", \"c\", \"b\"],\n *   [\"c\", \"a\", \"b\"],\n *   [\"c\", \"b\", \"a\"]\n * ]\n */\nexport function permutations(arr: any[]): any[] {\n  if (arr.length === 0) {\n    return [[]];\n  }\n  return permutations(arr.slice(1)).reduce((acc, perm) => {\n    return acc.concat(\n      arr.map((e, pos) => {\n        const newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n}\n\nexport default {\n  compact,\n  permutations,\n  range,\n  rotate,\n  shuffle,\n};\n",null,"import { deprecate } from \"@tonaljs/core\";\nimport {\n  EmptyPcset,\n  get as pcset,\n  Pcset,\n  PcsetChroma,\n  PcsetNum,\n} from \"@tonaljs/pcset\";\nimport data from \"./data\";\n\n/**\n * Properties for a scale in the scale dictionary. It's a pitch class set\n * properties with the following additional information:\n * - name: the scale name\n * - aliases: alternative list of names\n * - intervals: an array of interval names\n */\nexport interface ScaleType extends Pcset {\n  readonly name: string;\n  readonly aliases: string[];\n}\n\nexport const NoScaleType: ScaleType = {\n  ...EmptyPcset,\n  intervals: [],\n  aliases: [],\n};\n\ntype ScaleTypeName = string | PcsetChroma | PcsetNum;\n\nlet dictionary: ScaleType[] = [];\nlet index: Record<ScaleTypeName, ScaleType> = {};\n\nexport function names() {\n  return dictionary.map((scale) => scale.name);\n}\n\n/**\n * Given a scale name or chroma, return the scale properties\n *\n * @param {string} type - scale name or pitch class set chroma\n * @example\n * import { get } from 'tonaljs/scale-type'\n * get('major') // => { name: 'major', ... }\n */\nexport function get(type: ScaleTypeName): ScaleType {\n  return index[type] || NoScaleType;\n}\n\nexport const scaleType = deprecate(\n  \"ScaleDictionary.scaleType\",\n  \"ScaleType.get\",\n  get\n);\n\n/**\n * Return a list of all scale types\n */\nexport function all() {\n  return dictionary.slice();\n}\n\nexport const entries = deprecate(\n  \"ScaleDictionary.entries\",\n  \"ScaleType.all\",\n  all\n);\n\n/**\n * Keys used to reference scale types\n */\nexport function keys() {\n  return Object.keys(index);\n}\n\n/**\n * Clear the dictionary\n */\nexport function removeAll() {\n  dictionary = [];\n  index = {};\n}\n\n/**\n * Add a scale into dictionary\n * @param intervals\n * @param name\n * @param aliases\n */\nexport function add(\n  intervals: string[],\n  name: string,\n  aliases: string[] = []\n): ScaleType {\n  const scale = { ...pcset(intervals), name, intervals, aliases };\n  dictionary.push(scale);\n  index[scale.name] = scale;\n  index[scale.setNum] = scale;\n  index[scale.chroma] = scale;\n  scale.aliases.forEach((alias) => addAlias(scale, alias));\n  return scale;\n}\n\nexport function addAlias(scale: ScaleType, alias: string) {\n  index[alias] = scale;\n}\n\ndata.forEach(([ivls, name, ...aliases]: string[]) =>\n  add(ivls.split(\" \"), name, aliases)\n);\n\nexport default {\n  names,\n  get,\n  all,\n  add,\n  removeAll,\n  keys,\n\n  // deprecated\n  entries,\n  scaleType,\n};\n","// SCALES\n// Format: [\"intervals\", \"name\", \"alias1\", \"alias2\", ...]\nconst SCALES: string[][] = [\n  // Basic scales\n  [\"1P 2M 3M 5P 6M\", \"major pentatonic\", \"pentatonic\"],\n  [\"1P 2M 3M 4P 5P 6M 7M\", \"major\", \"ionian\"],\n  [\"1P 2M 3m 4P 5P 6m 7m\", \"minor\", \"aeolian\"],\n\n  // Jazz common scales\n  [\"1P 2M 3m 3M 5P 6M\", \"major blues\"],\n  [\"1P 3m 4P 5d 5P 7m\", \"minor blues\", \"blues\"],\n  [\"1P 2M 3m 4P 5P 6M 7M\", \"melodic minor\"],\n  [\"1P 2M 3m 4P 5P 6m 7M\", \"harmonic minor\"],\n  [\"1P 2M 3M 4P 5P 6M 7m 7M\", \"bebop\"],\n  [\"1P 2M 3m 4P 5d 6m 6M 7M\", \"diminished\", \"whole-half diminished\"],\n\n  // Modes\n  [\"1P 2M 3m 4P 5P 6M 7m\", \"dorian\"],\n  [\"1P 2M 3M 4A 5P 6M 7M\", \"lydian\"],\n  [\"1P 2M 3M 4P 5P 6M 7m\", \"mixolydian\", \"dominant\"],\n  [\"1P 2m 3m 4P 5P 6m 7m\", \"phrygian\"],\n  [\"1P 2m 3m 4P 5d 6m 7m\", \"locrian\"],\n\n  // 5-note scales\n  [\"1P 3M 4P 5P 7M\", \"ionian pentatonic\"],\n  [\"1P 3M 4P 5P 7m\", \"mixolydian pentatonic\", \"indian\"],\n  [\"1P 2M 4P 5P 6M\", \"ritusen\"],\n  [\"1P 2M 4P 5P 7m\", \"egyptian\"],\n  [\"1P 3M 4P 5d 7m\", \"neopolitan major pentatonic\"],\n  [\"1P 3m 4P 5P 6m\", \"vietnamese 1\"],\n  [\"1P 2m 3m 5P 6m\", \"pelog\"],\n  [\"1P 2m 4P 5P 6m\", \"kumoijoshi\"],\n  [\"1P 2M 3m 5P 6m\", \"hirajoshi\"],\n  [\"1P 2m 4P 5d 7m\", \"iwato\"],\n  [\"1P 2m 4P 5P 7m\", \"in-sen\"],\n  [\"1P 3M 4A 5P 7M\", \"lydian pentatonic\", \"chinese\"],\n  [\"1P 3m 4P 6m 7m\", \"malkos raga\"],\n  [\"1P 3m 4P 5d 7m\", \"locrian pentatonic\", \"minor seven flat five pentatonic\"],\n  [\"1P 3m 4P 5P 7m\", \"minor pentatonic\", \"vietnamese 2\"],\n  [\"1P 3m 4P 5P 6M\", \"minor six pentatonic\"],\n  [\"1P 2M 3m 5P 6M\", \"flat three pentatonic\", \"kumoi\"],\n  [\"1P 2M 3M 5P 6m\", \"flat six pentatonic\"],\n  [\"1P 2m 3M 5P 6M\", \"scriabin\"],\n  [\"1P 3M 5d 6m 7m\", \"whole tone pentatonic\"],\n  [\"1P 3M 4A 5A 7M\", \"lydian #5P pentatonic\"],\n  [\"1P 3M 4A 5P 7m\", \"lydian dominant pentatonic\"],\n  [\"1P 3m 4P 5P 7M\", \"minor #7M pentatonic\"],\n  [\"1P 3m 4d 5d 7m\", \"super locrian pentatonic\"],\n\n  // 6-note scales\n  [\"1P 2M 3m 4P 5P 7M\", \"minor hexatonic\"],\n  [\"1P 2A 3M 5P 5A 7M\", \"augmented\"],\n  [\"1P 2M 4P 5P 6M 7m\", \"piongio\"],\n  [\"1P 2m 3M 4A 6M 7m\", \"prometheus neopolitan\"],\n  [\"1P 2M 3M 4A 6M 7m\", \"prometheus\"],\n  [\"1P 2m 3M 5d 6m 7m\", \"mystery #1\"],\n  [\"1P 2m 3M 4P 5A 6M\", \"six tone symmetric\"],\n  [\"1P 2M 3M 4A 5A 6A\", \"whole tone\", \"messiaen's mode #1\"],\n  [\"1P 2m 4P 4A 5P 7M\", \"messiaen's mode #5\"],\n\n  // 7-note scales\n  [\"1P 2M 3M 4P 5d 6m 7m\", \"locrian major\", \"arabian\"],\n  [\"1P 2m 3M 4A 5P 6m 7M\", \"double harmonic lydian\"],\n  [\n    \"1P 2m 2A 3M 4A 6m 7m\",\n    \"altered\",\n    \"super locrian\",\n    \"diminished whole tone\",\n    \"pomeroy\",\n  ],\n  [\"1P 2M 3m 4P 5d 6m 7m\", \"locrian #2\", \"half-diminished\", \"aeolian b5\"],\n  [\n    \"1P 2M 3M 4P 5P 6m 7m\",\n    \"mixolydian b6\",\n    \"melodic minor fifth mode\",\n    \"hindu\",\n  ],\n  [\"1P 2M 3M 4A 5P 6M 7m\", \"lydian dominant\", \"lydian b7\", \"overtone\"],\n  [\"1P 2M 3M 4A 5A 6M 7M\", \"lydian augmented\"],\n  [\n    \"1P 2m 3m 4P 5P 6M 7m\",\n    \"dorian b2\",\n    \"phrygian #6\",\n    \"melodic minor second mode\",\n  ],\n  [\n    \"1P 2m 3m 4d 5d 6m 7d\",\n    \"ultralocrian\",\n    \"superlocrian bb7\",\n    \"superlocrian diminished\",\n  ],\n  [\"1P 2m 3m 4P 5d 6M 7m\", \"locrian 6\", \"locrian natural 6\", \"locrian sharp 6\"],\n  [\"1P 2A 3M 4P 5P 5A 7M\", \"augmented heptatonic\"],\n  // Source https://en.wikipedia.org/wiki/Ukrainian_Dorian_scale\n  [\n    \"1P 2M 3m 4A 5P 6M 7m\",\n    \"dorian #4\",\n    \"ukrainian dorian\",\n    \"romanian minor\",\n    \"altered dorian\",\n  ],\n  [\"1P 2M 3m 4A 5P 6M 7M\", \"lydian diminished\"],\n  [\"1P 2M 3M 4A 5A 7m 7M\", \"leading whole tone\"],\n  [\"1P 2M 3M 4A 5P 6m 7m\", \"lydian minor\"],\n  [\"1P 2m 3M 4P 5P 6m 7m\", \"phrygian dominant\", \"spanish\", \"phrygian major\"],\n  [\"1P 2m 3m 4P 5P 6m 7M\", \"balinese\"],\n  [\"1P 2m 3m 4P 5P 6M 7M\", \"neopolitan major\"],\n  [\"1P 2M 3M 4P 5P 6m 7M\", \"harmonic major\"],\n  [\"1P 2m 3M 4P 5P 6m 7M\", \"double harmonic major\", \"gypsy\"],\n  [\"1P 2M 3m 4A 5P 6m 7M\", \"hungarian minor\"],\n  [\"1P 2A 3M 4A 5P 6M 7m\", \"hungarian major\"],\n  [\"1P 2m 3M 4P 5d 6M 7m\", \"oriental\"],\n  [\"1P 2m 3m 3M 4A 5P 7m\", \"flamenco\"],\n  [\"1P 2m 3m 4A 5P 6m 7M\", \"todi raga\"],\n  [\"1P 2m 3M 4P 5d 6m 7M\", \"persian\"],\n  [\"1P 2m 3M 5d 6m 7m 7M\", \"enigmatic\"],\n  [\n    \"1P 2M 3M 4P 5A 6M 7M\",\n    \"major augmented\",\n    \"major #5\",\n    \"ionian augmented\",\n    \"ionian #5\",\n  ],\n  [\"1P 2A 3M 4A 5P 6M 7M\", \"lydian #9\"],\n\n  // 8-note scales\n  [\"1P 2m 2M 4P 4A 5P 6m 7M\", \"messiaen's mode #4\"],\n  [\"1P 2m 3M 4P 4A 5P 6m 7M\", \"purvi raga\"],\n  [\"1P 2m 3m 3M 4P 5P 6m 7m\", \"spanish heptatonic\"],\n  [\"1P 2M 3m 3M 4P 5P 6M 7m\", \"bebop minor\"],\n  [\"1P 2M 3M 4P 5P 5A 6M 7M\", \"bebop major\"],\n  [\"1P 2m 3m 4P 5d 5P 6m 7m\", \"bebop locrian\"],\n  [\"1P 2M 3m 4P 5P 6m 7m 7M\", \"minor bebop\"],\n  [\"1P 2M 3M 4P 5d 5P 6M 7M\", \"ichikosucho\"],\n  [\"1P 2M 3m 4P 5P 6m 6M 7M\", \"minor six diminished\"],\n  [\n    \"1P 2m 3m 3M 4A 5P 6M 7m\",\n    \"half-whole diminished\",\n    \"dominant diminished\",\n    \"messiaen's mode #2\",\n  ],\n  [\"1P 3m 3M 4P 5P 6M 7m 7M\", \"kafi raga\"],\n  [\"1P 2M 3M 4P 4A 5A 6A 7M\", \"messiaen's mode #6\"],\n\n  // 9-note scales\n  [\"1P 2M 3m 3M 4P 5d 5P 6M 7m\", \"composite blues\"],\n  [\"1P 2M 3m 3M 4A 5P 6m 7m 7M\", \"messiaen's mode #3\"],\n\n  // 10-note scales\n  [\"1P 2m 2M 3m 4P 4A 5P 6m 6M 7M\", \"messiaen's mode #7\"],\n\n  // 12-note scales\n  [\"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\", \"chromatic\"],\n];\n\nexport default SCALES;\n",null,"import AbcNotation from \"@tonaljs/abc-notation\";\nimport * as Array from \"@tonaljs/array\";\nimport Chord from \"@tonaljs/chord\";\nimport ChordType from \"@tonaljs/chord-type\";\nimport Collection from \"@tonaljs/collection\";\nimport * as Core from \"@tonaljs/core\";\nimport DurationValue from \"@tonaljs/duration-value\";\nimport Interval from \"@tonaljs/interval\";\nimport Key from \"@tonaljs/key\";\nimport Midi from \"@tonaljs/midi\";\nimport Mode from \"@tonaljs/mode\";\nimport Note from \"@tonaljs/note\";\nimport Pcset from \"@tonaljs/pcset\";\nimport Progression from \"@tonaljs/progression\";\nimport Range from \"@tonaljs/range\";\nimport RomanNumeral from \"@tonaljs/roman-numeral\";\nimport Scale from \"@tonaljs/scale\";\nimport ScaleType from \"@tonaljs/scale-type\";\nimport TimeSignature from \"@tonaljs/time-signature\";\n\nexport * from \"@tonaljs/core\";\n\n// deprecated (backwards compatibility)\nconst Tonal = Core;\nconst PcSet = Pcset;\nconst ChordDictionary = ChordType;\nconst ScaleDictionary = ScaleType;\n\nexport {\n  AbcNotation,\n  Array,\n  Chord,\n  ChordType,\n  Collection,\n  Core,\n  DurationValue,\n  Note,\n  Interval,\n  Key,\n  Midi,\n  Mode,\n  Pcset,\n  Progression,\n  Range,\n  RomanNumeral,\n  Scale,\n  ScaleType,\n  TimeSignature,\n  // backwards API compatibility (3.0)\n  Tonal,\n  PcSet,\n  ChordDictionary,\n  ScaleDictionary,\n};\n",null,"import { distance as dist, note, transpose as tr } from \"@tonaljs/core\";\n\nconst fillStr = (character: string, times: number) =>\n  Array(times + 1).join(character);\n\nconst REGEX = /^(_{1,}|=|\\^{1,}|)([abcdefgABCDEFG])([,']*)$/;\n\ntype AbcTokens = [string, string, string];\n\nexport function tokenize(str: string): AbcTokens {\n  const m = REGEX.exec(str);\n  if (!m) {\n    return [\"\", \"\", \"\"];\n  }\n  return [m[1], m[2], m[3]];\n}\n\n/**\n * Convert a (string) note in ABC notation into a (string) note in scientific notation\n *\n * @example\n * abcToScientificNotation(\"c\") // => \"C5\"\n */\nexport function abcToScientificNotation(str: string): string {\n  const [acc, letter, oct] = tokenize(str);\n  if (letter === \"\") {\n    return \"\";\n  }\n  let o = 4;\n  for (let i = 0; i < oct.length; i++) {\n    o += oct.charAt(i) === \",\" ? -1 : 1;\n  }\n  const a =\n    acc[0] === \"_\"\n      ? acc.replace(/_/g, \"b\")\n      : acc[0] === \"^\"\n      ? acc.replace(/\\^/g, \"#\")\n      : \"\";\n  return letter.charCodeAt(0) > 96\n    ? letter.toUpperCase() + a + (o + 1)\n    : letter + a + o;\n}\n\n/**\n * Convert a (string) note in scientific notation into a (string) note in ABC notation\n *\n * @example\n * scientificToAbcNotation(\"C#4\") // => \"^C\"\n */\nexport function scientificToAbcNotation(str: string): string {\n  const n = note(str);\n  if (n.empty || (!n.oct && n.oct !== 0)) {\n    return \"\";\n  }\n  const { letter, acc, oct } = n;\n  const a = acc[0] === \"b\" ? acc.replace(/b/g, \"_\") : acc.replace(/#/g, \"^\");\n  const l = oct > 4 ? letter.toLowerCase() : letter;\n  const o =\n    oct === 5 ? \"\" : oct > 4 ? fillStr(\"'\", oct - 5) : fillStr(\",\", 4 - oct);\n  return a + l + o;\n}\n\nexport function transpose(note: string, interval: string): string {\n  return scientificToAbcNotation(tr(abcToScientificNotation(note), interval));\n}\n\nexport function distance(from: string, to: string): string {\n  return dist(abcToScientificNotation(from), abcToScientificNotation(to));\n}\n\nexport default {\n  abcToScientificNotation,\n  scientificToAbcNotation,\n  tokenize,\n  transpose,\n  distance,\n};\n",null,"import { note, Note } from \"@tonaljs/core\";\n\nconst isArray = Array.isArray;\n\n// ascending range\nfunction ascR(b: number, n: number) {\n  const a = [];\n  // tslint:disable-next-line:curly\n  for (; n--; a[n] = n + b);\n  return a;\n}\n// descending range\nfunction descR(b: number, n: number) {\n  const a = [];\n  // tslint:disable-next-line:curly\n  for (; n--; a[n] = b - n);\n  return a;\n}\n\n/**\n * Creates a numeric range\n *\n * @param {number} from\n * @param {number} to\n * @return {Array<number>}\n *\n * @example\n * range(-2, 2) // => [-2, -1, 0, 1, 2]\n * range(2, -2) // => [2, 1, 0, -1, -2]\n */\nexport function range(from: number, to: number): number[] {\n  return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\n}\n\n/**\n * Rotates a list a number of times. It\"s completly agnostic about the\n * contents of the list.\n *\n * @param {Integer} times - the number of rotations\n * @param {Array} array\n * @return {Array} the rotated array\n *\n * @example\n * rotate(1, [1, 2, 3]) // => [2, 3, 1]\n */\nexport function rotate<T>(times: number, arr: T[]): T[] {\n  const len = arr.length;\n  const n = ((times % len) + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\n\n/**\n * Return a copy of the array with the null values removed\n * @function\n * @param {Array} array\n * @return {Array}\n *\n * @example\n * compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\n */\nexport function compact(arr: any[]): any[] {\n  return arr.filter((n) => n === 0 || n);\n}\n\n/**\n * Sort an array of notes in ascending order. Pitch classes are listed\n * before notes. Any string that is not a note is removed.\n *\n * @param {string[]} notes\n * @return {string[]} sorted array of notes\n *\n * @example\n * sortedNoteNames(['c2', 'c5', 'c1', 'c0', 'c6', 'c'])\n * // => ['C', 'C0', 'C1', 'C2', 'C5', 'C6']\n * sortedNoteNames(['c', 'F', 'G', 'a', 'b', 'h', 'J'])\n * // => ['C', 'F', 'G', 'A', 'B']\n */\nexport function sortedNoteNames(notes: string[]): string[] {\n  const valid = notes.map((n) => note(n)).filter((n) => !n.empty) as Note[];\n  return valid.sort((a, b) => a.height - b.height).map((n) => n.name);\n}\n\n/**\n * Get sorted notes with duplicates removed. Pitch classes are listed\n * before notes.\n *\n * @function\n * @param {string[]} array\n * @return {string[]} unique sorted notes\n *\n * @example\n * Array.sortedUniqNoteNames(['a', 'b', 'c2', '1p', 'p2', 'c2', 'b', 'c', 'c3' ])\n * // => [ 'C', 'A', 'B', 'C2', 'C3' ]\n */\nexport function sortedUniqNoteNames(arr: string[]): string[] {\n  return sortedNoteNames(arr).filter((n, i, a) => i === 0 || n !== a[i - 1]);\n}\n\n/**\n * Randomizes the order of the specified array in-place, using the Fisher–Yates shuffle.\n *\n * @function\n * @param {Array} array\n * @return {Array} the array shuffled\n *\n * @example\n * shuffle([\"C\", \"D\", \"E\", \"F\"]) // => [...]\n */\nexport function shuffle(arr: any[], rnd = Math.random): any[] {\n  let i: number;\n  let t: any;\n  let m: number = arr.length;\n  while (m) {\n    i = Math.floor(rnd() * m--);\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n}\n\n/**\n * Get all permutations of an array\n *\n * @param {Array} array - the array\n * @return {Array<Array>} an array with all the permutations\n * @example\n * permutations([\"a\", \"b\", \"c\"])) // =>\n * [\n *   [\"a\", \"b\", \"c\"],\n *   [\"b\", \"a\", \"c\"],\n *   [\"b\", \"c\", \"a\"],\n *   [\"a\", \"c\", \"b\"],\n *   [\"c\", \"a\", \"b\"],\n *   [\"c\", \"b\", \"a\"]\n * ]\n */\nexport function permutations(arr: any[]): any[] {\n  if (arr.length === 0) {\n    return [[]];\n  }\n  return permutations(arr.slice(1)).reduce((acc, perm) => {\n    return acc.concat(\n      arr.map((e, pos) => {\n        const newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n}\n",null,"// source: https://en.wikipedia.org/wiki/Note_value\nconst DATA: [number, string, string[]][] = [\n  [\n    0.125,\n    \"dl\",\n    [\"large\", \"duplex longa\", \"maxima\", \"octuple\", \"octuple whole\"],\n  ],\n  [0.25, \"l\", [\"long\", \"longa\"]],\n  [0.5, \"d\", [\"double whole\", \"double\", \"breve\"]],\n  [1, \"w\", [\"whole\", \"semibreve\"]],\n  [2, \"h\", [\"half\", \"minim\"]],\n  [4, \"q\", [\"quarter\", \"crotchet\"]],\n  [8, \"e\", [\"eighth\", \"quaver\"]],\n  [16, \"s\", [\"sixteenth\", \"semiquaver\"]],\n  [32, \"t\", [\"thirty-second\", \"demisemiquaver\"]],\n  [64, \"sf\", [\"sixty-fourth\", \"hemidemisemiquaver\"]],\n  [128, \"h\", [\"hundred twenty-eighth\"]],\n  [256, \"th\", [\"two hundred fifty-sixth\"]],\n];\n\nexport default DATA;\n","import DATA from \"./data\";\n\ntype Fraction = [number, number];\n\nconst VALUES: DurationValue[] = [];\n\nDATA.forEach(([denominator, shorthand, names]) =>\n  add(denominator, shorthand, names)\n);\n\nexport interface DurationValue {\n  empty: boolean;\n  value: number;\n  name: string;\n  fraction: Fraction;\n  shorthand: string;\n  dots: string;\n  names: string[];\n}\n\nconst NoDuration: DurationValue = {\n  empty: true,\n  name: \"\",\n  value: 0,\n  fraction: [0, 0],\n  shorthand: \"\",\n  dots: \"\",\n  names: [],\n};\n\nexport function names(): string[] {\n  return VALUES.reduce((names, duration) => {\n    duration.names.forEach((name) => names.push(name));\n    return names;\n  }, [] as string[]);\n}\n\nexport function shorthands(): string[] {\n  return VALUES.map((dur) => dur.shorthand);\n}\n\nconst REGEX = /^([^.]+)(\\.*)$/;\n\nexport function get(name: string): DurationValue {\n  const [_, simple, dots] = REGEX.exec(name) || [];\n  const base = VALUES.find(\n    (dur) => dur.shorthand === simple || dur.names.includes(simple)\n  );\n  if (!base) {\n    return NoDuration;\n  }\n\n  const fraction = calcDots(base.fraction, dots.length);\n  const value = fraction[0] / fraction[1];\n\n  return { ...base, name, dots, value, fraction };\n}\n\nexport const value = (name: string) => get(name).value;\nexport const fraction = (name: string) => get(name).fraction;\n\nexport default { names, shorthands, get, value, fraction };\n\n//// PRIVATE ////\n\nfunction add(denominator: number, shorthand: string, names: string[]) {\n  VALUES.push({\n    empty: false,\n    dots: \"\",\n    name: \"\",\n    value: 1 / denominator,\n    fraction: denominator < 1 ? [1 / denominator, 1] : [1, denominator],\n    shorthand,\n    names,\n  });\n}\n\nfunction calcDots(fraction: Fraction, dots: number): Fraction {\n  const pow = Math.pow(2, dots);\n\n  let numerator = fraction[0] * pow;\n  let denominator = fraction[1] * pow;\n  const base = numerator;\n\n  // add fractions\n  for (let i = 0; i < dots; i++) {\n    numerator += base / Math.pow(2, i + 1);\n  }\n\n  // simplify\n  while (numerator % 2 === 0 && denominator % 2 === 0) {\n    numerator /= 2;\n    denominator /= 2;\n  }\n  return [numerator, denominator];\n}\n",null,"import {\n  coordToInterval,\n  distance as dist,\n  interval as props,\n  IntervalCoordinates,\n  IntervalName,\n  NoteCoordinates,\n  tokenizeInterval as tokenize,\n} from \"@tonaljs/core\";\n\n/**\n * Get the natural list of names\n */\nexport function names(): IntervalName[] {\n  return \"1P 2M 3M 4P 5P 6m 7m\".split(\" \");\n}\n\n/**\n * Get properties of an interval\n *\n * @function\n * @example\n * Interval.get('P4') // => {\"alt\": 0,  \"dir\": 1,  \"name\": \"4P\", \"num\": 4, \"oct\": 0, \"q\": \"P\", \"semitones\": 5, \"simple\": 4, \"step\": 3, \"type\": \"perfectable\"}\n */\nexport const get = props;\n\n/**\n * Get name of an interval\n *\n * @function\n * @example\n * Interval.name('4P') // => \"4P\"\n * Interval.name('P4') // => \"4P\"\n * Interval.name('C4') // => \"\"\n */\nexport const name = (name: string) => props(name).name;\n\n/**\n * Get semitones of an interval\n * @function\n * @example\n * Interval.semitones('P4') // => 5\n */\nexport const semitones = (name: string) => props(name).semitones;\n\n/**\n * Get quality of an interval\n * @function\n * @example\n * Interval.quality('P4') // => \"P\"\n */\nexport const quality = (name: string) => props(name).q;\n\n/**\n * Get number of an interval\n * @function\n * @example\n * Interval.num('P4') // => 4\n */\nexport const num = (name: string) => props(name).num;\n\n/**\n * Get the simplified version of an interval.\n *\n * @function\n * @param {string} interval - the interval to simplify\n * @return {string} the simplified interval\n *\n * @example\n * Interval.simplify(\"9M\") // => \"2M\"\n * Interval.simplify(\"2M\") // => \"2M\"\n * Interval.simplify(\"-2M\") // => \"7m\"\n * [\"8P\", \"9M\", \"10M\", \"11P\", \"12P\", \"13M\", \"14M\", \"15P\"].map(Interval.simplify)\n * // => [ \"8P\", \"2M\", \"3M\", \"4P\", \"5P\", \"6M\", \"7M\", \"8P\" ]\n */\nexport function simplify(name: IntervalName): IntervalName {\n  const i = props(name);\n  return i.empty ? \"\" : i.simple + i.q;\n}\n\n/**\n * Get the inversion (https://en.wikipedia.org/wiki/Inversion_(music)#Intervals)\n * of an interval.\n *\n * @function\n * @param {string} interval - the interval to invert in interval shorthand\n * notation or interval array notation\n * @return {string} the inverted interval\n *\n * @example\n * Interval.invert(\"3m\") // => \"6M\"\n * Interval.invert(\"2M\") // => \"7m\"\n */\nexport function invert(name: IntervalName): IntervalName {\n  const i = props(name);\n  if (i.empty) {\n    return \"\";\n  }\n  const step = (7 - i.step) % 7;\n  const alt = i.type === \"perfectable\" ? -i.alt : -(i.alt + 1);\n  return props({ step, alt, oct: i.oct, dir: i.dir }).name;\n}\n\n// interval numbers\nconst IN = [1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7];\n// interval qualities\nconst IQ = \"P m M m M P d P m M m M\".split(\" \");\n\n/**\n * Get interval name from semitones number. Since there are several interval\n * names for the same number, the name it's arbitrary, but deterministic.\n *\n * @param {Integer} num - the number of semitones (can be negative)\n * @return {string} the interval name\n * @example\n * Interval.fromSemitones(7) // => \"5P\"\n * Interval.fromSemitones(-7) // => \"-5P\"\n */\nexport function fromSemitones(semitones: number): IntervalName {\n  const d = semitones < 0 ? -1 : 1;\n  const n = Math.abs(semitones);\n  const c = n % 12;\n  const o = Math.floor(n / 12);\n  return d * (IN[c] + 7 * o) + IQ[c];\n}\n\n/**\n * Find interval between two notes\n *\n * @example\n * Interval.distance(\"C4\", \"G4\"); // => \"5P\"\n */\nexport const distance = dist;\n\n/**\n * Adds two intervals\n *\n * @function\n * @param {string} interval1\n * @param {string} interval2\n * @return {string} the added interval name\n * @example\n * Interval.add(\"3m\", \"5P\") // => \"7m\"\n */\nexport const add = combinator((a, b) => [a[0] + b[0], a[1] + b[1]]);\n\n/**\n * Returns a function that adds an interval\n *\n * @function\n * @example\n * ['1P', '2M', '3M'].map(Interval.addTo('5P')) // => [\"5P\", \"6M\", \"7M\"]\n */\nexport const addTo = (interval: string) => (other: string) =>\n  add(interval, other);\n\n/**\n * Subtracts two intervals\n *\n * @function\n * @param {string} minuendInterval\n * @param {string} subtrahendInterval\n * @return {string} the substracted interval name\n * @example\n * Interval.substract('5P', '3M') // => '3m'\n * Interval.substract('3M', '5P') // => '-3m'\n */\nexport const substract = combinator((a, b) => [a[0] - b[0], a[1] - b[1]]);\n\nexport function transposeFifths(\n  interval: IntervalName,\n  fifths: number\n): IntervalName {\n  const ivl = get(interval);\n  if (ivl.empty) return \"\";\n\n  const [nFifths, nOcts, dir] = ivl.coord;\n  return coordToInterval([nFifths + fifths, nOcts, dir]).name;\n}\n\nexport default {\n  names,\n  get,\n  name,\n  num,\n  semitones,\n  quality,\n  fromSemitones,\n  distance,\n  invert,\n  simplify,\n  add,\n  addTo,\n  substract,\n  transposeFifths,\n};\n\n//// PRIVATE ////\n\ntype Operation = (\n  a: IntervalCoordinates,\n  b: IntervalCoordinates\n) => NoteCoordinates;\n\nfunction combinator(fn: Operation) {\n  return (a: IntervalName, b: IntervalName): IntervalName | undefined => {\n    const coordA = props(a).coord;\n    const coordB = props(b).coord;\n    if (coordA && coordB) {\n      const coord = fn(coordA, coordB);\n      return coordToInterval(coord).name;\n    }\n  };\n}\n",null,"import { accToAlt, altToAcc, note, transpose } from \"@tonaljs/core\";\nimport { transposeFifths } from \"@tonaljs/note\";\nimport { get as roman } from \"@tonaljs/roman-numeral\";\n\nconst Empty: readonly string[] = Object.freeze([] as string[]);\n\nexport interface Key {\n  readonly type: \"major\" | \"minor\";\n  readonly tonic: string;\n  readonly alteration: number;\n  readonly keySignature: string;\n}\n\nconst NoKey: Key = {\n  type: \"major\",\n  tonic: \"\",\n  alteration: 0,\n  keySignature: \"\",\n};\n\nexport interface KeyScale {\n  readonly tonic: string;\n  readonly grades: readonly string[];\n  readonly intervals: readonly string[];\n  readonly scale: readonly string[];\n  readonly triads: readonly string[];\n  readonly chords: readonly string[];\n  readonly chordsHarmonicFunction: readonly string[];\n  readonly chordScales: readonly string[];\n}\n\nconst NoKeyScale: KeyScale = {\n  tonic: \"\",\n  grades: Empty,\n  intervals: Empty,\n  scale: Empty,\n  triads: Empty,\n  chords: Empty,\n  chordsHarmonicFunction: Empty,\n  chordScales: Empty,\n};\n\nexport interface MajorKey extends Key, KeyScale {\n  readonly type: \"major\";\n  readonly minorRelative: string;\n  readonly scale: readonly string[];\n  readonly secondaryDominants: readonly string[];\n  readonly secondaryDominantsMinorRelative: readonly string[];\n  readonly substituteDominants: readonly string[];\n  readonly substituteDominantsMinorRelative: readonly string[];\n}\n\nconst NoMajorKey: MajorKey = {\n  ...NoKey,\n  ...NoKeyScale,\n  type: \"major\",\n  minorRelative: \"\",\n  scale: Empty,\n  secondaryDominants: Empty,\n  secondaryDominantsMinorRelative: Empty,\n  substituteDominants: Empty,\n  substituteDominantsMinorRelative: Empty,\n};\n\nexport interface MinorKey extends Key {\n  readonly type: \"minor\";\n  readonly relativeMajor: string;\n  readonly natural: KeyScale;\n  readonly harmonic: KeyScale;\n  readonly melodic: KeyScale;\n}\n\nconst NoMinorKey: MinorKey = {\n  ...NoKey,\n  type: \"minor\",\n  relativeMajor: \"\",\n  natural: NoKeyScale,\n  harmonic: NoKeyScale,\n  melodic: NoKeyScale,\n};\n\nconst mapScaleToType = (scale: string[], list: string[], sep = \"\") =>\n  list.map((type, i) => `${scale[i]}${sep}${type}`);\n\nfunction keyScale(\n  grades: string[],\n  triads: string[],\n  chords: string[],\n  harmonicFunctions: string[],\n  chordScales: string[]\n) {\n  return (tonic: string): KeyScale => {\n    const intervals = grades.map((gr) => roman(gr).interval || \"\");\n    const scale = intervals.map((interval) => transpose(tonic, interval));\n\n    return {\n      tonic,\n      grades,\n      intervals,\n      scale,\n      triads: mapScaleToType(scale, triads),\n      chords: mapScaleToType(scale, chords),\n      chordsHarmonicFunction: harmonicFunctions.slice(),\n      chordScales: mapScaleToType(scale, chordScales, \" \"),\n    };\n  };\n}\n\nconst distInFifths = (from: string, to: string) => {\n  const f = note(from);\n  const t = note(to);\n  return f.empty || t.empty ? 0 : t.coord[0] - f.coord[0];\n};\n\nconst MajorScale = keyScale(\n  \"I II III IV V VI VII\".split(\" \"),\n  \" m m   m dim\".split(\" \"),\n  \"maj7 m7 m7 maj7 7 m7 m7b5\".split(\" \"),\n  \"T SD T SD D T D\".split(\" \"),\n  \"major,dorian,phrygian,lydian,mixolydian,minor,locrian\".split(\",\")\n);\nconst NaturalScale = keyScale(\n  \"I II bIII IV V bVI bVII\".split(\" \"),\n  \"m dim  m m  \".split(\" \"),\n  \"m7 m7b5 maj7 m7 m7 maj7 7\".split(\" \"),\n  \"T SD T SD D SD SD\".split(\" \"),\n  \"minor,locrian,major,dorian,phrygian,lydian,mixolydian\".split(\",\")\n);\nconst HarmonicScale = keyScale(\n  \"I II bIII IV V bVI VII\".split(\" \"),\n  \"m dim aug m   dim\".split(\" \"),\n  \"mMaj7 m7b5 +maj7 m7 7 maj7 o7\".split(\" \"),\n  \"T SD T SD D SD D\".split(\" \"),\n  \"harmonic minor,locrian 6,major augmented,lydian diminished,phrygian dominant,lydian #9,ultralocrian\".split(\n    \",\"\n  )\n);\nconst MelodicScale = keyScale(\n  \"I II bIII IV V VI VII\".split(\" \"),\n  \"m m aug   dim dim\".split(\" \"),\n  \"m6 m7 +maj7 7 7 m7b5 m7b5\".split(\" \"),\n  \"T SD T SD D  \".split(\" \"),\n  \"melodic minor,dorian b2,lydian augmented,lydian dominant,mixolydian b6,locrian #2,altered\".split(\n    \",\"\n  )\n);\n\n/**\n * Get a major key properties in a given tonic\n * @param tonic\n */\nexport function majorKey(tonic: string): MajorKey {\n  const pc = note(tonic).pc;\n  if (!pc) return NoMajorKey;\n\n  const keyScale = MajorScale(pc);\n  const alteration = distInFifths(\"C\", pc);\n  const romanInTonic = (src: string) => {\n    const r = roman(src);\n    if (r.empty) return \"\";\n\n    return transpose(tonic, r.interval) + r.chordType;\n  };\n\n  return {\n    ...keyScale,\n    type: \"major\",\n    minorRelative: transpose(pc, \"-3m\"),\n    alteration,\n    keySignature: altToAcc(alteration),\n    secondaryDominants: \"- VI7 VII7 I7 II7 III7 -\".split(\" \").map(romanInTonic),\n    secondaryDominantsMinorRelative: \"- IIIm7b5 IV#m7 Vm7 VIm7 VIIm7b5 -\"\n      .split(\" \")\n      .map(romanInTonic),\n    substituteDominants: \"- bIII7 IV7 bV7 bVI7 bVII7 -\"\n      .split(\" \")\n      .map(romanInTonic),\n    substituteDominantsMinorRelative: \"- IIIm7 Im7 IIbm7 VIm7 IVm7 -\"\n      .split(\" \")\n      .map(romanInTonic),\n  };\n}\n\n/**\n * Get minor key properties in a given tonic\n * @param tonic\n */\nexport function minorKey(tnc: string): MinorKey {\n  const pc = note(tnc).pc;\n  if (!pc) return NoMinorKey;\n\n  const alteration = distInFifths(\"C\", pc) - 3;\n  return {\n    type: \"minor\",\n    tonic: pc,\n    relativeMajor: transpose(pc, \"3m\"),\n    alteration,\n    keySignature: altToAcc(alteration),\n    natural: NaturalScale(pc),\n    harmonic: HarmonicScale(pc),\n    melodic: MelodicScale(pc),\n  };\n}\n\n/**\n * Given a key signature, returns the tonic of the major key\n * @param sigature\n * @example\n * majorTonicFromKeySignature('###') // => 'A'\n */\nexport function majorTonicFromKeySignature(\n  sig: string | number\n): string | null {\n  if (typeof sig === \"number\") {\n    return transposeFifths(\"C\", sig);\n  } else if (typeof sig === \"string\" && /^b+|#+$/.test(sig)) {\n    return transposeFifths(\"C\", accToAlt(sig));\n  }\n  return null;\n}\n\nexport default { majorKey, majorTonicFromKeySignature, minorKey };\n",null,"import {\n  IntervalName,\n  Named,\n  Note,\n  note as props,\n  NoteLiteral,\n  NoteName,\n  Pitch,\n  transpose as _tr,\n} from \"@tonaljs/core\";\nimport { freqToMidi, midiToNoteName } from \"@tonaljs/midi\";\n\nconst NAMES = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\n\nconst toName = (n: Named) => n.name;\nconst onlyNotes = (array: any[]) =>\n  array.map(props).filter((n) => !n.empty) as Note[];\n\n/**\n * Return the natural note names without octave\n * @function\n * @example\n * Note.names(); // => [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"]\n */\nexport function names(array?: any[]): string[] {\n  if (array === undefined) {\n    return NAMES.slice();\n  } else if (!Array.isArray(array)) {\n    return [];\n  } else {\n    return onlyNotes(array).map(toName);\n  }\n}\n\n/**\n * Get a note from a note name\n *\n * @function\n * @example\n * Note.get('Bb4') // => { name: \"Bb4\", midi: 70, chroma: 10, ... }\n */\nexport const get = props;\n\n/**\n * Get the note name\n * @function\n */\nexport const name = (note: NoteLiteral) => get(note).name;\n\n/**\n * Get the note pitch class name\n * @function\n */\nexport const pitchClass = (note: NoteLiteral) => get(note).pc;\n\n/**\n * Get the note accidentals\n * @function\n */\nexport const accidentals = (note: NoteLiteral) => get(note).acc;\n\n/**\n * Get the note octave\n * @function\n */\nexport const octave = (note: NoteLiteral) => get(note).oct;\n\n/**\n * Get the note midi\n * @function\n */\nexport const midi = (note: NoteLiteral) => get(note).midi;\n\n/**\n * Get the note midi\n * @function\n */\nexport const freq = (note: NoteLiteral) => get(note).freq;\n\n/**\n * Get the note chroma\n * @function\n */\nexport const chroma = (note: NoteLiteral) => get(note).chroma;\n\n/**\n * Given a midi number, returns a note name. Uses flats for altered notes.\n *\n * @function\n * @param {number} midi - the midi note number\n * @return {string} the note name\n * @example\n * Note.fromMidi(61) // => \"Db4\"\n * Note.fromMidi(61.7) // => \"D4\"\n */\nexport function fromMidi(midi: number) {\n  return midiToNoteName(midi);\n}\n\n/**\n * Given a midi number, returns a note name. Uses flats for altered notes.\n */\nexport function fromFreq(freq: number) {\n  return midiToNoteName(freqToMidi(freq));\n}\n/**\n * Given a midi number, returns a note name. Uses flats for altered notes.\n */\nexport function fromFreqSharps(freq: number) {\n  return midiToNoteName(freqToMidi(freq), { sharps: true });\n}\n\n/**\n * Given a midi number, returns a note name. Uses flats for altered notes.\n *\n * @function\n * @param {number} midi - the midi note number\n * @return {string} the note name\n * @example\n * Note.fromMidiSharps(61) // => \"C#4\"\n */\n\nexport function fromMidiSharps(midi: number) {\n  return midiToNoteName(midi, { sharps: true });\n}\n\n/**\n * Transpose a note by an interval\n */\nexport const transpose = _tr;\nexport const tr = _tr;\n\n/**\n * Transpose by an interval.\n * @function\n * @param {string} interval\n * @return {function} a function that transposes by the given interval\n * @example\n * [\"C\", \"D\", \"E\"].map(Note.transposeBy(\"5P\"));\n * // => [\"G\", \"A\", \"B\"]\n */\nexport const transposeBy = (interval: IntervalName) => (note: NoteName) =>\n  transpose(note, interval);\nexport const trBy = transposeBy;\n\n/**\n * Transpose from a note\n * @function\n * @param {string} note\n * @return {function}  a function that transposes the the note by an interval\n * [\"1P\", \"3M\", \"5P\"].map(Note.transposeFrom(\"C\"));\n * // => [\"C\", \"E\", \"G\"]\n */\nexport const transposeFrom = (note: NoteName) => (interval: IntervalName) =>\n  transpose(note, interval);\nexport const trFrom = transposeFrom;\n\n/**\n * Transpose a note by a number of perfect fifths.\n *\n * @function\n * @param {string} note - the note name\n * @param {number} fifhts - the number of fifths\n * @return {string} the transposed note name\n *\n * @example\n * import { transposeFifths } from \"@tonaljs/note\"\n * transposeFifths(\"G4\", 1) // => \"D\"\n * [0, 1, 2, 3, 4].map(fifths => transposeFifths(\"C\", fifths)) // => [\"C\", \"G\", \"D\", \"A\", \"E\"]\n */\nexport function transposeFifths(noteName: NoteName, fifths: number): NoteName {\n  return transpose(noteName, [fifths, 0]);\n}\nexport const trFifths = transposeFifths;\n\n// TODO: documentation\nexport function transposeOctaves(\n  noteName: NoteName,\n  octaves: number\n): NoteName {\n  return transpose(noteName, [0, octaves]);\n}\n\nexport type NoteComparator = (a: Note, b: Note) => number;\n\nexport const ascending: NoteComparator = (a, b) => a.height - b.height;\nexport const descending: NoteComparator = (a, b) => b.height - a.height;\n\nexport function sortedNames(\n  notes: any[],\n  comparator?: NoteComparator\n): string[] {\n  comparator = comparator || ascending;\n  return onlyNotes(notes).sort(comparator).map(toName);\n}\n\nexport function sortedUniqNames(notes: any[]): string[] {\n  return sortedNames(notes, ascending).filter(\n    (n, i, a) => i === 0 || n !== a[i - 1]\n  );\n}\n\n/**\n * Simplify a note\n *\n * @function\n * @param {string} note - the note to be simplified\n * - sameAccType: default true. Use same kind of accidentals that source\n * @return {string} the simplified note or '' if not valid note\n * @example\n * simplify(\"C##\") // => \"D\"\n * simplify(\"C###\") // => \"D#\"\n * simplify(\"C###\")\n * simplify(\"B#4\") // => \"C5\"\n */\nexport const simplify = (noteName: NoteName | Pitch): string => {\n  const note = get(noteName);\n  if (note.empty) {\n    return \"\";\n  }\n  return midiToNoteName(note.midi || note.chroma, {\n    sharps: note.alt > 0,\n    pitchClass: note.midi === null,\n  });\n};\n/**\n * Get enharmonic of a note\n *\n * @function\n * @param {string} note\n * @param [string] - [optional] Destination pitch class\n * @return {string} the enharmonic note name or '' if not valid note\n * @example\n * Note.enharmonic(\"Db\") // => \"C#\"\n * Note.enharmonic(\"C\") // => \"C\"\n * Note.enharmonic(\"F2\",\"E#\") // => \"E#2\"\n */\nexport function enharmonic(noteName: string, destName?: string) {\n  const src = get(noteName);\n  if (src.empty) {\n    return \"\";\n  }\n\n  // destination: use given or generate one\n  const dest = get(\n    destName ||\n      midiToNoteName(src.midi || src.chroma, {\n        sharps: src.alt < 0,\n        pitchClass: true,\n      })\n  );\n\n  // ensure destination is valid\n  if (dest.empty || dest.chroma !== src.chroma) {\n    return \"\";\n  }\n\n  // if src has no octave, no need to calculate anything else\n  if (src.oct === undefined) {\n    return dest.pc;\n  }\n\n  // detect any octave overflow\n  const srcChroma = src.chroma - src.alt;\n  const destChroma = dest.chroma - dest.alt;\n  const destOctOffset =\n    srcChroma > 11 || destChroma < 0\n      ? -1\n      : srcChroma < 0 || destChroma > 11\n      ? +1\n      : 0;\n  // calculate the new octave\n  const destOct = src.oct + destOctOffset;\n  return dest.pc + destOct;\n}\n\nexport default {\n  names,\n  get,\n  name,\n  pitchClass,\n  accidentals,\n  octave,\n  midi,\n  ascending,\n  descending,\n  sortedNames,\n  sortedUniqNames,\n  fromMidi,\n  fromMidiSharps,\n  freq,\n  fromFreq,\n  fromFreqSharps,\n  chroma,\n  transpose,\n  tr,\n  transposeBy,\n  trBy,\n  transposeFrom,\n  trFrom,\n  transposeFifths,\n  transposeOctaves,\n  trFifths,\n  simplify,\n  enharmonic,\n};\n",null,"import { note as props, NoteName } from \"@tonaljs/core\";\n\ntype Midi = number;\n\nexport function isMidi(arg: any): arg is Midi {\n  return +arg >= 0 && +arg <= 127;\n}\n\n/**\n * Get the note midi number (a number between 0 and 127)\n *\n * It returns undefined if not valid note name\n *\n * @function\n * @param {string|number} note - the note name or midi number\n * @return {Integer} the midi number or undefined if not valid note\n * @example\n * import { toMidi } from '@tonaljs/midi'\n * toMidi(\"C4\") // => 60\n * toMidi(60) // => 60\n * toMidi('60') // => 60\n */\nexport function toMidi(note: NoteName | number): number | null {\n  if (isMidi(note)) {\n    return +note;\n  }\n  const n = props(note);\n  return n.empty ? null : n.midi;\n}\n\n/**\n * Get the frequency in hertzs from midi number\n *\n * @param {number} midi - the note midi number\n * @param {number} [tuning = 440] - A4 tuning frequency in Hz (440 by default)\n * @return {number} the frequency or null if not valid note midi\n * @example\n * import { midiToFreq} from '@tonaljs/midi'\n * midiToFreq(69) // => 440\n */\nexport function midiToFreq(midi: number, tuning = 440): number {\n  return Math.pow(2, (midi - 69) / 12) * tuning;\n}\n\nconst L2 = Math.log(2);\nconst L440 = Math.log(440);\n\n/**\n * Get the midi number from a frequency in hertz. The midi number can\n * contain decimals (with two digits precision)\n *\n * @param {number} frequency\n * @return {number}\n * @example\n * import { freqToMidi} from '@tonaljs/midi'\n * freqToMidi(220)); //=> 57\n * freqToMidi(261.62)); //=> 60\n * freqToMidi(261)); //=> 59.96\n */\nexport function freqToMidi(freq: number): number {\n  const v = (12 * (Math.log(freq) - L440)) / L2 + 69;\n  return Math.round(v * 100) / 100;\n}\n\nexport interface ToNoteNameOptions {\n  pitchClass?: boolean;\n  sharps?: boolean;\n}\n\nconst SHARPS = \"C C# D D# E F F# G G# A A# B\".split(\" \");\nconst FLATS = \"C Db D Eb E F Gb G Ab A Bb B\".split(\" \");\n/**\n * Given a midi number, returns a note name. The altered notes will have\n * flats unless explicitly set with the optional `useSharps` parameter.\n *\n * @function\n * @param {number} midi - the midi note number\n * @param {Object} options = default: `{ sharps: false, pitchClass: false }`\n * @param {boolean} useSharps - (Optional) set to true to use sharps instead of flats\n * @return {string} the note name\n * @example\n * import { midiToNoteName } from '@tonaljs/midi'\n * midiToNoteName(61) // => \"Db4\"\n * midiToNoteName(61, { pitchClass: true }) // => \"Db\"\n * midiToNoteName(61, { sharps: true }) // => \"C#4\"\n * midiToNoteName(61, { pitchClass: true, sharps: true }) // => \"C#\"\n * // it rounds to nearest note\n * midiToNoteName(61.7) // => \"D4\"\n */\nexport function midiToNoteName(midi: number, options: ToNoteNameOptions = {}) {\n  if (isNaN(midi) || midi === -Infinity || midi === Infinity) return \"\";\n  midi = Math.round(midi);\n  const pcs = options.sharps === true ? SHARPS : FLATS;\n  const pc = pcs[midi % 12];\n  if (options.pitchClass) {\n    return pc;\n  }\n  const o = Math.floor(midi / 12) - 1;\n  return pc + o;\n}\n\nexport function chroma(midi: number): number {\n  return midi % 12;\n}\n\nfunction pcsetFromChroma(chroma: string): number[] {\n  return chroma.split(\"\").reduce((pcset, val, index) => {\n    if (index < 12 && val === \"1\") pcset.push(index);\n    return pcset;\n  }, [] as number[]);\n}\n\nfunction pcsetFromMidi(midi: number[]): number[] {\n  return midi\n    .map(chroma)\n    .sort((a, b) => a - b)\n    .filter((n, i, a) => i === 0 || n !== a[i - 1]);\n}\n\n/**\n * Given a list of midi numbers, returns the pitch class set (unique chroma numbers)\n * @param midi\n * @example\n *\n */\nexport function pcset(notes: number[] | string): number[] {\n  return Array.isArray(notes) ? pcsetFromMidi(notes) : pcsetFromChroma(notes);\n}\n\nexport function pcsetNearest(notes: number[] | string) {\n  const set = pcset(notes);\n  return (midi: number): number | undefined => {\n    const ch = chroma(midi);\n    for (let i = 0; i < 12; i++) {\n      if (set.includes(ch + i)) return midi + i;\n      if (set.includes(ch - i)) return midi - i;\n    }\n    return undefined;\n  };\n}\n\nexport function pcsetSteps(notes: number[] | string, tonic: number) {\n  const set = pcset(notes);\n  const len = set.length;\n  return (step: number): number => {\n    const index = step < 0 ? (len - (-step % len)) % len : step % len;\n    const octaves = Math.floor(step / len);\n    return set[index] + octaves * 12 + tonic;\n  };\n}\n\nexport function pcsetDegrees(notes: number[] | string, tonic: number) {\n  const steps = pcsetSteps(notes, tonic);\n  return (degree: number): number | undefined => {\n    if (degree === 0) return undefined;\n    return steps(degree > 0 ? degree - 1 : degree);\n  };\n}\n\nexport default {\n  chroma,\n  freqToMidi,\n  isMidi,\n  midiToFreq,\n  midiToNoteName,\n  pcsetNearest,\n  pcset,\n  pcsetDegrees,\n  pcsetSteps,\n  toMidi,\n};\n",null,"import {\n  accToAlt,\n  altToAcc,\n  deprecate,\n  interval,\n  isNamed,\n  isPitch,\n  Named,\n  Pitch,\n} from \"@tonaljs/core\";\n\nexport interface RomanNumeral extends Pitch, Named {\n  readonly empty: boolean;\n  readonly roman: string;\n  readonly interval: string;\n  readonly acc: string;\n  readonly chordType: string;\n  readonly major: boolean;\n  readonly dir: 1;\n}\n\nexport interface NoRomanNumeral extends Partial<RomanNumeral> {\n  readonly empty: true;\n  readonly name: \"\";\n  readonly chordType: \"\";\n}\nconst NoRomanNumeral: NoRomanNumeral = { empty: true, name: \"\", chordType: \"\" };\n\nconst cache: Record<string, RomanNumeral | NoRomanNumeral> = {};\n\n/**\n * Get properties of a roman numeral string\n *\n * @function\n * @param {string} - the roman numeral string (can have type, like: Imaj7)\n * @return {Object} - the roman numeral properties\n * @param {string} name - the roman numeral (tonic)\n * @param {string} type - the chord type\n * @param {string} num - the number (1 = I, 2 = II...)\n * @param {boolean} major - major or not\n *\n * @example\n * romanNumeral(\"VIIb5\") // => { name: \"VII\", type: \"b5\", num: 7, major: true }\n */\nexport function get(src: any): RomanNumeral | NoRomanNumeral {\n  return typeof src === \"string\"\n    ? cache[src] || (cache[src] = parse(src))\n    : typeof src === \"number\"\n    ? get(NAMES[src] || \"\")\n    : isPitch(src)\n    ? fromPitch(src)\n    : isNamed(src)\n    ? get(src.name)\n    : NoRomanNumeral;\n}\n\nconst romanNumeral = deprecate(\n  \"RomanNumeral.romanNumeral\",\n  \"RomanNumeral.get\",\n  get\n);\n\n/**\n * Get roman numeral names\n *\n * @function\n * @param {boolean} [isMajor=true]\n * @return {Array<String>}\n *\n * @example\n * names() // => [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\"]\n */\nexport function names(major = true) {\n  return (major ? NAMES : NAMES_MINOR).slice();\n}\n\nfunction fromPitch(pitch: Pitch): RomanNumeral | NoRomanNumeral {\n  return get(altToAcc(pitch.alt) + NAMES[pitch.step]);\n}\n\nconst REGEX =\n  /^(#{1,}|b{1,}|x{1,}|)(IV|I{1,3}|VI{0,2}|iv|i{1,3}|vi{0,2})([^IViv]*)$/;\n\n// [name, accidentals, romanNumeral, chordType]\ntype RomanNumeralTokens = [string, string, string, string];\nexport function tokenize(str: string): RomanNumeralTokens {\n  return (REGEX.exec(str) || [\"\", \"\", \"\", \"\"]) as RomanNumeralTokens;\n}\n\nconst ROMANS = \"I II III IV V VI VII\";\nconst NAMES = ROMANS.split(\" \");\nconst NAMES_MINOR = ROMANS.toLowerCase().split(\" \");\n\nfunction parse(src: string): RomanNumeral | NoRomanNumeral {\n  const [name, acc, roman, chordType] = tokenize(src);\n  if (!roman) {\n    return NoRomanNumeral;\n  }\n\n  const upperRoman = roman.toUpperCase();\n  const step = NAMES.indexOf(upperRoman);\n  const alt = accToAlt(acc);\n  const dir = 1;\n  return {\n    empty: false,\n    name,\n    roman,\n    interval: interval({ step, alt, dir }).name,\n    acc,\n    chordType,\n    alt,\n    step,\n    major: roman === upperRoman,\n    oct: 0,\n    dir,\n  };\n}\n\nexport default {\n  names,\n  get,\n  // deprecated\n  romanNumeral,\n};\n",null,"import { rotate } from \"@tonaljs/collection\";\nimport { deprecate, Named, NoteName, transpose } from \"@tonaljs/core\";\nimport { simplify, transposeFifths } from \"@tonaljs/interval\";\nimport { EmptyPcset, Pcset } from \"@tonaljs/pcset\";\nimport { get as getType } from \"@tonaljs/scale-type\";\n\nconst MODES = [\n  [0, 2773, 0, \"ionian\", \"\", \"Maj7\", \"major\"],\n  [1, 2902, 2, \"dorian\", \"m\", \"m7\"],\n  [2, 3418, 4, \"phrygian\", \"m\", \"m7\"],\n  [3, 2741, -1, \"lydian\", \"\", \"Maj7\"],\n  [4, 2774, 1, \"mixolydian\", \"\", \"7\"],\n  [5, 2906, 3, \"aeolian\", \"m\", \"m7\", \"minor\"],\n  [6, 3434, 5, \"locrian\", \"dim\", \"m7b5\"],\n] as const;\n\ntype ModeDatum = typeof MODES[number];\n\nexport interface Mode extends Pcset {\n  readonly name: string;\n  readonly modeNum: number;\n  readonly alt: number; // number of alterations === number of fiths\n  readonly triad: string;\n  readonly seventh: string;\n  readonly aliases: string[];\n}\n\nconst NoMode: Mode = {\n  ...EmptyPcset,\n  name: \"\",\n  alt: 0,\n  modeNum: NaN,\n  triad: \"\",\n  seventh: \"\",\n  aliases: [],\n};\n\nconst modes: Mode[] = MODES.map(toMode);\nconst index: Record<string, Mode> = {};\nmodes.forEach((mode) => {\n  index[mode.name] = mode;\n  mode.aliases.forEach((alias) => {\n    index[alias] = mode;\n  });\n});\n\ntype ModeLiteral = string | Named;\n\n/**\n * Get a Mode by it's name\n *\n * @example\n * get('dorian')\n * // =>\n * // {\n * //   intervals: [ '1P', '2M', '3m', '4P', '5P', '6M', '7m' ],\n * //   modeNum: 1,\n * //   chroma: '101101010110',\n * //   normalized: '101101010110',\n * //   name: 'dorian',\n * //   setNum: 2902,\n * //   alt: 2,\n * //   triad: 'm',\n * //   seventh: 'm7',\n * //   aliases: []\n * // }\n */\nexport function get(name: ModeLiteral): Mode {\n  return typeof name === \"string\"\n    ? index[name.toLowerCase()] || NoMode\n    : name && name.name\n    ? get(name.name)\n    : NoMode;\n}\n\nexport const mode = deprecate(\"Mode.mode\", \"Mode.get\", get);\n\n/**\n * Get a list of all modes\n */\nexport function all() {\n  return modes.slice();\n}\nexport const entries = deprecate(\"Mode.mode\", \"Mode.all\", all);\n\n/**\n * Get a list of all mode names\n */\nexport function names() {\n  return modes.map((mode) => mode.name);\n}\n\nfunction toMode(mode: ModeDatum): Mode {\n  const [modeNum, setNum, alt, name, triad, seventh, alias] = mode;\n  const aliases = alias ? [alias] : [];\n  const chroma = Number(setNum).toString(2);\n  const intervals = getType(name).intervals;\n  return {\n    empty: false,\n    intervals,\n    modeNum,\n    chroma,\n    normalized: chroma,\n    name,\n    setNum,\n    alt,\n    triad,\n    seventh,\n    aliases,\n  };\n}\n\nexport function notes(modeName: ModeLiteral, tonic: NoteName) {\n  return get(modeName).intervals.map((ivl) => transpose(tonic, ivl));\n}\n\nfunction chords(chords: string[]) {\n  return (modeName: ModeLiteral, tonic: NoteName) => {\n    const mode = get(modeName);\n    if (mode.empty) return [];\n    const triads = rotate(mode.modeNum, chords);\n    const tonics = mode.intervals.map((i) => transpose(tonic, i));\n    return triads.map((triad, i) => tonics[i] + triad);\n  };\n}\n\nexport const triads = chords(MODES.map((x) => x[4]));\nexport const seventhChords = chords(MODES.map((x) => x[5]));\n\nexport function distance(destination: ModeLiteral, source: ModeLiteral) {\n  const from = get(source);\n  const to = get(destination);\n  if (from.empty || to.empty) return \"\";\n  return simplify(transposeFifths(\"1P\", to.alt - from.alt));\n}\n\nexport function relativeTonic(\n  destination: ModeLiteral,\n  source: ModeLiteral,\n  tonic: NoteName\n) {\n  return transpose(tonic, distance(destination, source));\n}\n\nexport default {\n  get,\n  names,\n  all,\n  distance,\n  relativeTonic,\n  notes,\n  triads,\n  seventhChords,\n  // deprecated\n  entries,\n  mode,\n};\n",null,"import { tokenize } from \"@tonaljs/chord\";\nimport { distance, interval, NoteLiteral, transpose } from \"@tonaljs/core\";\nimport { get as romanNumeral } from \"@tonaljs/roman-numeral\";\n\n/**\n * Given a tonic and a chord list expressed with roman numeral notation\n * returns the progression expressed with leadsheet chords symbols notation\n * @example\n * fromRomanNumerals(\"C\", [\"I\", \"IIm7\", \"V7\"]);\n * // => [\"C\", \"Dm7\", \"G7\"]\n */\nexport function fromRomanNumerals(\n  tonic: NoteLiteral,\n  chords: string[]\n): string[] {\n  const romanNumerals = chords.map(romanNumeral);\n  return romanNumerals.map(\n    (rn) => transpose(tonic, interval(rn)) + rn.chordType\n  );\n}\n\n/**\n * Given a tonic and a chord list with leadsheet symbols notation,\n * return the chord list with roman numeral notation\n * @example\n * toRomanNumerals(\"C\", [\"CMaj7\", \"Dm7\", \"G7\"]);\n * // => [\"IMaj7\", \"IIm7\", \"V7\"]\n */\nexport function toRomanNumerals(\n  tonic: NoteLiteral,\n  chords: string[]\n): string[] {\n  return chords.map((chord) => {\n    const [note, chordType] = tokenize(chord);\n    const intervalName = distance(tonic, note);\n    const roman = romanNumeral(interval(intervalName));\n    return roman.name + chordType;\n  });\n}\n\nexport default { fromRomanNumerals, toRomanNumerals };\n",null,"import { compact, range } from \"@tonaljs/collection\";\nimport { midiToNoteName, toMidi, ToNoteNameOptions } from \"@tonaljs/midi\";\n\n/**\n * Create a numeric range. You supply a list of notes or numbers and it will\n * be connected to create complex ranges.\n *\n * @param {Array} notes - the list of notes or midi numbers used\n * @return {Array} an array of numbers or empty array if not valid parameters\n *\n * @example\n * numeric([\"C5\", \"C4\"]) // => [ 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60 ]\n * // it works midi notes\n * numeric([10, 5]) // => [ 10, 9, 8, 7, 6, 5 ]\n * // complex range\n * numeric([\"C4\", \"E4\", \"Bb3\"]) // => [60, 61, 62, 63, 64, 63, 62, 61, 60, 59, 58]\n */\nexport function numeric(notes: (string | number)[]): number[] {\n  const midi: number[] = compact(\n    notes.map((note) => (typeof note === \"number\" ? note : toMidi(note)))\n  );\n  if (!notes.length || midi.length !== notes.length) {\n    // there is no valid notes\n    return [];\n  }\n\n  return midi.reduce(\n    (result, note) => {\n      const last: number = result[result.length - 1];\n      return result.concat(range(last, note).slice(1));\n    },\n    [midi[0]]\n  );\n}\n\n/**\n * Create a range of chromatic notes. The altered notes will use flats.\n *\n * @function\n * @param {Array} notes - the list of notes or midi note numbers to create a range from\n * @param {Object} options - The same as `midiToNoteName` (`{ sharps: boolean, pitchClass: boolean }`)\n * @return {Array} an array of note names\n *\n * @example\n * Range.chromatic([\"C2, \"E2\", \"D2\"]) // => [\"C2\", \"Db2\", \"D2\", \"Eb2\", \"E2\", \"Eb2\", \"D2\"]\n * // with sharps\n * Range.chromatic([\"C2\", \"C3\"], { sharps: true }) // => [ \"C2\", \"C#2\", \"D2\", \"D#2\", \"E2\", \"F2\", \"F#2\", \"G2\", \"G#2\", \"A2\", \"A#2\", \"B2\", \"C3\" ]\n */\nexport function chromatic(\n  notes: (string | number)[],\n  options?: ToNoteNameOptions\n): string[] {\n  return numeric(notes).map((midi) => midiToNoteName(midi, options));\n}\n\nexport default { numeric, chromatic };\n",null,"/**\n * References:\n * - https://www.researchgate.net/publication/327567188_An_Algorithm_for_Spelling_the_Pitches_of_Any_Musical_Scale\n * @module scale\n */\nimport { all as chordTypes } from \"@tonaljs/chord-type\";\nimport { range as nums, rotate } from \"@tonaljs/collection\";\nimport {\n  deprecate,\n  note,\n  NoteName,\n  tonicIntervalsTransposer,\n  transpose,\n} from \"@tonaljs/core\";\nimport { enharmonic, fromMidi, sortedUniqNames } from \"@tonaljs/note\";\nimport {\n  chroma,\n  isChroma,\n  isSubsetOf,\n  isSupersetOf,\n  modes,\n} from \"@tonaljs/pcset\";\nimport {\n  all,\n  all as scaleTypes,\n  get as getScaleType,\n  names as scaleTypeNames,\n  ScaleType,\n} from \"@tonaljs/scale-type\";\n\ntype ScaleName = string;\ntype ScaleNameTokens = [string, string]; // [TONIC, SCALE TYPE]\n\nexport interface Scale extends ScaleType {\n  tonic: string | null;\n  type: string;\n  notes: NoteName[];\n}\n\nconst NoScale: Scale = {\n  empty: true,\n  name: \"\",\n  type: \"\",\n  tonic: null,\n  setNum: NaN,\n  chroma: \"\",\n  normalized: \"\",\n  aliases: [],\n  notes: [],\n  intervals: [],\n};\n\n/**\n * Given a string with a scale name and (optionally) a tonic, split\n * that components.\n *\n * It retuns an array with the form [ name, tonic ] where tonic can be a\n * note name or null and name can be any arbitrary string\n * (this function doesn\"t check if that scale name exists)\n *\n * @function\n * @param {string} name - the scale name\n * @return {Array} an array [tonic, name]\n * @example\n * tokenize(\"C mixolydean\") // => [\"C\", \"mixolydean\"]\n * tokenize(\"anything is valid\") // => [\"\", \"anything is valid\"]\n * tokenize() // => [\"\", \"\"]\n */\nexport function tokenize(name: ScaleName): ScaleNameTokens {\n  if (typeof name !== \"string\") {\n    return [\"\", \"\"];\n  }\n  const i = name.indexOf(\" \");\n  const tonic = note(name.substring(0, i));\n  if (tonic.empty) {\n    const n = note(name);\n    return n.empty ? [\"\", name] : [n.name, \"\"];\n  }\n\n  const type = name.substring(tonic.name.length + 1);\n  return [tonic.name, type.length ? type : \"\"];\n}\n\n/**\n * Get all scale names\n * @function\n */\nexport const names = scaleTypeNames;\n\n/**\n * Get a Scale from a scale name.\n */\nexport function get(src: ScaleName | ScaleNameTokens): Scale {\n  const tokens = Array.isArray(src) ? src : tokenize(src);\n  const tonic = note(tokens[0]).name;\n  const st = getScaleType(tokens[1]);\n  if (st.empty) {\n    return NoScale;\n  }\n\n  const type = st.name;\n  const notes: string[] = tonic\n    ? st.intervals.map((i) => transpose(tonic, i))\n    : [];\n\n  const name = tonic ? tonic + \" \" + type : type;\n\n  return { ...st, name, type, tonic, notes };\n}\n\nexport const scale = deprecate(\"Scale.scale\", \"Scale.get\", get);\n\nexport function detect(\n  notes: string[],\n  options: { tonic?: string; match?: \"exact\" | \"fit\" } = {}\n): string[] {\n  const notesChroma = chroma(notes);\n  const tonic = note(options.tonic ?? notes[0] ?? \"\");\n  const tonicChroma = tonic.chroma;\n  if (tonicChroma === undefined) {\n    return [];\n  }\n\n  const pitchClasses = notesChroma.split(\"\");\n  pitchClasses[tonicChroma] = \"1\";\n  const scaleChroma = rotate(tonicChroma, pitchClasses).join(\"\");\n  const match = all().find((scaleType) => scaleType.chroma === scaleChroma);\n\n  const results: string[] = [];\n  if (match) {\n    results.push(tonic.name + \" \" + match.name);\n  }\n  if (options.match === \"exact\") {\n    return results;\n  }\n\n  extended(scaleChroma).forEach((scaleName) => {\n    results.push(tonic.name + \" \" + scaleName);\n  });\n\n  return results;\n}\n\n/**\n * Get all chords that fits a given scale\n *\n * @function\n * @param {string} name - the scale name\n * @return {Array<string>} - the chord names\n *\n * @example\n * scaleChords(\"pentatonic\") // => [\"5\", \"64\", \"M\", \"M6\", \"Madd9\", \"Msus2\"]\n */\nexport function scaleChords(name: string): string[] {\n  const s = get(name);\n  const inScale = isSubsetOf(s.chroma);\n  return chordTypes()\n    .filter((chord) => inScale(chord.chroma))\n    .map((chord) => chord.aliases[0]);\n}\n/**\n * Get all scales names that are a superset of the given one\n * (has the same notes and at least one more)\n *\n * @function\n * @param {string} name\n * @return {Array} a list of scale names\n * @example\n * extended(\"major\") // => [\"bebop\", \"bebop dominant\", \"bebop major\", \"chromatic\", \"ichikosucho\"]\n */\nexport function extended(name: string): string[] {\n  const chroma = isChroma(name) ? name : get(name).chroma;\n  const isSuperset = isSupersetOf(chroma);\n  return scaleTypes()\n    .filter((scale) => isSuperset(scale.chroma))\n    .map((scale) => scale.name);\n}\n\n/**\n * Find all scales names that are a subset of the given one\n * (has less notes but all from the given scale)\n *\n * @function\n * @param {string} name\n * @return {Array} a list of scale names\n *\n * @example\n * reduced(\"major\") // => [\"ionian pentatonic\", \"major pentatonic\", \"ritusen\"]\n */\nexport function reduced(name: string): string[] {\n  const isSubset = isSubsetOf(get(name).chroma);\n  return scaleTypes()\n    .filter((scale) => isSubset(scale.chroma))\n    .map((scale) => scale.name);\n}\n\n/**\n * Given an array of notes, return the scale: a pitch class set starting from\n * the first note of the array\n *\n * @function\n * @param {string[]} notes\n * @return {string[]} pitch classes with same tonic\n * @example\n * scaleNotes(['C4', 'c3', 'C5', 'C4', 'c4']) // => [\"C\"]\n * scaleNotes(['D4', 'c#5', 'A5', 'F#6']) // => [\"D\", \"F#\", \"A\", \"C#\"]\n */\nexport function scaleNotes(notes: NoteName[]) {\n  const pcset: string[] = notes.map((n) => note(n).pc).filter((x) => x);\n  const tonic = pcset[0];\n  const scale = sortedUniqNames(pcset);\n  return rotate(scale.indexOf(tonic), scale);\n}\n\ntype ScaleMode = [string, string];\n/**\n * Find mode names of a scale\n *\n * @function\n * @param {string} name - scale name\n * @example\n * modeNames(\"C pentatonic\") // => [\n *   [\"C\", \"major pentatonic\"],\n *   [\"D\", \"egyptian\"],\n *   [\"E\", \"malkos raga\"],\n *   [\"G\", \"ritusen\"],\n *   [\"A\", \"minor pentatonic\"]\n * ]\n */\nexport function modeNames(name: string): ScaleMode[] {\n  const s = get(name);\n  if (s.empty) {\n    return [];\n  }\n\n  const tonics = s.tonic ? s.notes : s.intervals;\n  return modes(s.chroma)\n    .map((chroma: string, i: number): ScaleMode => {\n      const modeName = get(chroma).name;\n      return modeName ? [tonics[i], modeName] : [\"\", \"\"];\n    })\n    .filter((x) => x[0]);\n}\n\nfunction getNoteNameOf(scale: string | string[]) {\n  const names = Array.isArray(scale) ? scaleNotes(scale) : get(scale).notes;\n  const chromas = names.map((name) => note(name).chroma);\n\n  return (noteOrMidi: string | number): string | undefined => {\n    const currNote =\n      typeof noteOrMidi === \"number\"\n        ? note(fromMidi(noteOrMidi))\n        : note(noteOrMidi);\n    const height = currNote.height;\n\n    if (height === undefined) return undefined;\n    const chroma = height % 12;\n    const position = chromas.indexOf(chroma);\n    if (position === -1) return undefined;\n    return enharmonic(currNote.name, names[position]);\n  };\n}\n\nexport function rangeOf(scale: string | string[]) {\n  const getName = getNoteNameOf(scale);\n  return (fromNote: string, toNote: string) => {\n    const from = note(fromNote).height;\n    const to = note(toNote).height;\n    if (from === undefined || to === undefined) return [];\n\n    return nums(from, to)\n      .map(getName)\n      .filter((x) => x);\n  };\n}\n\n/**\n * Returns a function to get a note name from the scale degree.\n *\n * @example\n * [1, 2, 3].map(Scale.degrees(\"C major\")) => [\"C\", \"D\", \"E\"]\n * [1, 2, 3].map(Scale.degrees(\"C4 major\")) => [\"C4\", \"D4\", \"E4\"]\n */\nexport function degrees(scaleName: string | ScaleNameTokens) {\n  const { intervals, tonic } = get(scaleName);\n  const transpose = tonicIntervalsTransposer(intervals, tonic);\n  return (degree: number) =>\n    degree ? transpose(degree > 0 ? degree - 1 : degree) : \"\";\n}\n\n/**\n * Sames as `degree` but with 0-based index\n */\nexport function steps(scaleName: string | ScaleNameTokens) {\n  const { intervals, tonic } = get(scaleName);\n  return tonicIntervalsTransposer(intervals, tonic);\n}\n\nexport default {\n  degrees,\n  detect,\n  extended,\n  get,\n  modeNames,\n  names,\n  rangeOf,\n  reduced,\n  scaleChords,\n  scaleNotes,\n  steps,\n  tokenize,\n\n  // deprecated\n  scale,\n};\n",null,"// TYPES: PARSING\nexport type TimeSignatureLiteral = string | [number, number] | [string, string];\ntype ParsedTimeSignature = [number | number[], number];\n\n// TYPES: PROPERTIES\nexport type ValidTimeSignature = {\n  readonly empty: false;\n  readonly name: string;\n  readonly upper: number | number[];\n  readonly lower: number;\n  readonly type: \"simple\" | \"compound\" | \"irregular\" | \"irrational\";\n  readonly additive: number[];\n};\n\nexport type InvalidTimeSignature = {\n  readonly empty: true;\n  readonly name: \"\";\n  readonly upper: undefined;\n  readonly lower: undefined;\n  readonly type: undefined;\n  readonly additive: [];\n};\n\nexport type TimeSignature = ValidTimeSignature | InvalidTimeSignature;\n\n// CONSTANTS\nconst NONE: InvalidTimeSignature = {\n  empty: true,\n  name: \"\",\n  upper: undefined,\n  lower: undefined,\n  type: undefined,\n  additive: [],\n};\n\nconst NAMES = [\"4/4\", \"3/4\", \"2/4\", \"2/2\", \"12/8\", \"9/8\", \"6/8\", \"3/8\"];\n\n// PUBLIC API\n\nexport function names() {\n  return NAMES.slice();\n}\n\nconst REGEX = /^(\\d*\\d(?:\\+\\d)*)\\/(\\d+)$/;\nconst CACHE = new Map<TimeSignatureLiteral, TimeSignature>();\n\nexport function get(literal: TimeSignatureLiteral): TimeSignature {\n  const stringifiedLiteral = JSON.stringify(literal);\n  const cached = CACHE.get(stringifiedLiteral);\n  if (cached) {\n    return cached;\n  }\n\n  const ts = build(parse(literal));\n  CACHE.set(stringifiedLiteral, ts);\n  return ts;\n}\n\nexport function parse(literal: TimeSignatureLiteral): ParsedTimeSignature {\n  if (typeof literal === \"string\") {\n    const [_, up, low] = REGEX.exec(literal) || [];\n    return parse([up, low]);\n  }\n\n  const [up, down] = literal;\n  const denominator = +down;\n  if (typeof up === \"number\") {\n    return [up, denominator];\n  }\n\n  const list = up.split(\"+\").map((n) => +n);\n  return list.length === 1 ? [list[0], denominator] : [list, denominator];\n}\n\nexport default { names, parse, get };\n\n// PRIVATE\n\nconst isPowerOfTwo = (x: number) => (Math.log(x) / Math.log(2)) % 1 === 0;\n\nfunction build([up, down]: ParsedTimeSignature): TimeSignature {\n  const upper = Array.isArray(up) ? up.reduce((a, b) => a + b, 0) : up;\n  const lower = down;\n  if (upper === 0 || lower === 0) {\n    return NONE;\n  }\n\n  const name = Array.isArray(up) ? `${up.join(\"+\")}/${down}` : `${up}/${down}`;\n  const additive = Array.isArray(up) ? up : [];\n  const type =\n    lower === 4 || lower === 2\n      ? \"simple\"\n      : lower === 8 && upper % 3 === 0\n      ? \"compound\"\n      : isPowerOfTwo(lower)\n      ? \"irregular\"\n      : \"irrational\";\n\n  return {\n    empty: false,\n    name,\n    type,\n    upper,\n    lower,\n    additive,\n  };\n}\n","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n"],"names":["detect","chord","transpose","names","REGEX","cache","parse","pitchName","note","num","chroma","intervals","fraction","value","name","semitones","keyScale","midi","freq","pcset","mode","chords","triads","scale","up"],"version":3,"file":"index.0641b553.js.map","sourceRoot":"/__parcel_source_root/"}